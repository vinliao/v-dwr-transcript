that has the compounding, assuming we have competent product, thinking, design, you know, UX, if we compound that client over three, four, five years, that just becomes that much better for onboarding people into this overall ecosystem. Now, the thing that we are going to have to earn trust of is that going back to this idea that we're not grabbing the best features from the ecosystem and trying to keep people, you can kind of view us, uh, an imperfect analogy, but we're like the New York city, Ellis Island of Forecaster. Right. And so you show up plenty of people who immigrated to the United States when Ellis Island exists, lived in New York. And it's the reason that's the largest city in the country today. But there are also a lot of people who moved to other places and they got to make new decisions and, and they belong to the protocol that is the United States. Right. And so I think that that is much more of our role and we need to kind of realize the things that we're going to be good at. And yeah, actually keeping focused and not expanding the scope of that app over, over time is probably the right call. And I think one thing that's really inspirational as a company like WhatsApp, whereas if you actually look at what the original WhatsApp was versus where we are today, yeah, there have been incremental product features, but the core of what WhatsApp does is more or less the same. And, and, and they were known for being like a relentlessly focused culture of like, we're going to just be insanely reliable at doing messaging. And I think that that's a lot of the product ethos that we want to bring to our own client, again, separate from the protocol. And I think as in, in doing so we can actually help onboard more, more users to Forecaster than, you know, anyone else, at least for a while. And as a result, I think that that benefits the protocol, right? Cause every daily active user of our client becomes an addressable daily active user for another developer building on top of Forecaster. And in, in kind of viewing it like that, we have to kind of go again, earn our right, our, our, our reputation as being a steward and we're like, wow, they, they really mean it when they say every user that they onboard is an addressable user for me as an app developer, even if I'm building a competing client. And I fully expect if Forecaster is successful, right. Talk at a hundred plus million people using it, billion plus people using it. We will not have 90% market share. Like if we do it, like, I don't think we're going to have 90% market share. A, I don't think we would get to that scale. Right. B, um, it hasn't succeeded as a protocol. Exactly. So, so people can trust me or not. It's like, I have a long time preference on this. I really, really care about the protocol succeeding. And I think I'm just going to have to repeat that message for years on end. And at a certain point, some people will trust me and other people will, will not, and that's fine. And so like, I think we have to do that through actions. And if we, if we successfully do that and we can, can, you know, every time we do it, it actually starts to compound our reputation as like, no, no, they really do seem interested in the protocol. This is not all big, one big rug. That like, sorry, corporate APIs, like we now run the protocol, which I actually think if you, if you look at the protocol and we actually achieve the, the, the trade-offs that we're, we're claiming to make with kind of our architecture. You don't even have to trust me because you, you actually are running a hub that has access to all the same data that we are. And, and so I think that that that's the challenge over the next couple of years for us to solve. And I think the early community believes in what we're doing and what we're saying, but to get it to a much larger scale is just going to require a lot of continual decisions that we make that people start to trust that like, Hey, this is actually a protocol that I'm willing to go spend time building a business on knowing that it's going to be a credibly neutral, stable foundation. Totally. And I totally agree with you that the application compounding over time is the best gateway for onboarding new people. Like I've even found with myself, like when you added the algorithmic feed, that was just a huge game changer for me. Cause it was starting to get to the point where it was just chaos in there and I couldn't follow what was happening. And it just takes time to build a compelling product experience. Yeah. That's a great example where I think we were really hesitant to have an algorithm early on partially because the way I like to use Twitter is reverse chronological, but you do using it for 15 plus years. Yeah. You know, well up until recently I only followed a hundred people on Twitter. And so for me, I'm a completionist. I would actually go through and try to get back to the part of the timeline that I had left off at. Like it was like that, that's how I wanted to use it. I grew up reading RSS, right? Like that, that's how an RSS reader works. I think more recently I've been trying to follow more people within the crypto world, especially people who are already on Forecaster, because it's actually a good signal when people DM me to get on the network, which is currently the way you get into the beta, I can actually see mutuals. So if a hundred plus people that I'm following across this pretty wide swath of people in the crypto world, then I have a pretty good sense of like, okay, you're probably someone who's going to, you know, people are going to find interesting on Forecaster. And so I've actually seen a lot more of the algo with Twitter. And there are definitely some parts that I'm like, wow, this is actually pretty good, like I'm getting a lot more discovery, but then you have the threads and some of the things that kind of take advantage of the algo. And so I think one of the things we were really sensitive on is should we add an algo because that's actually also where a lot of people get frustrated. It's like, well, okay, what is the algorithm rewarding? And I think we got comfortable about a year in adding a very lightweight one. We call it highlights. And you, you, you know, you're actually there. It's like the default feed is following. And then if you tap into highlights, you're kind of opting into seeing this. And one thing that we've emphasized in highlights compared to maybe something like Twitter is that the primary way that we kind of bring conversations up in this algorithm is active conversations. And, and it's, it's not the kind of like one banger, we call them casts, but like tweet that that is like a dunk or a quote that has a lot harder of a time getting into that algo, whereas if you get something that actually has depth, if you think of the conversation as a tree, that you have all these kinds of interesting things happening, that that's, that's factoring into the algorithm a lot more. And what's important is because this is the default client that most people are using, that is actually nudging the behavior and norms of the network towards a more conversational platform. And I think that this is one thing that abstractly I kind of understood, but now that we're seeing it is the product decisions we make in this initial client. Have a huge impact on the shape and behavior of the network and the protocol generally, especially in this kind of constraint environment where we are doing a lot of the, on, we were doing, we're the only way to onboard right now. And so I think one of the beliefs we have is if we, we keep it invite only for somewhere close to a million, right. It might be a little less, might be a little bit more. And we moved to a model where people in the network are actually doing the inviting rather than everything kind of coming through me. I think that those defaults are really important because whereas right now you onboard with me kind of like in this chat and, and I can kind of reach back out to you if something, Hey, like that doesn't really, and it's like, I actually spoke with this person. I can't just go and be a total asshole on the other side of this. It's like being invited to a dinner party, a dinner party with 4,000 people. It's like, you do feel a little bit less like, okay, I should be a little bit more civil. But inevitably people are going to invite people. They're not going to have any other context. They're going to show up in the network and they're going to behave the way they want to behave. And so actually having solved for those defaults, that reward kind of call it constructive conversation. And I don't think we've, we've figured that out completely, but if you can actually do that by iterating while the network is small, then I think as you scale the average experience for a new user, as well as kind of power users still oriented towards quality, because you, you've kind of made the set of defaults in the interface oriented towards what you want people to do rather than what an algorithm might. So I think that that's how we've thought about it. And we're not perfect. Like we're going to make mistakes, but I think part of the perk of like, I use the app a lot, is if things aren't going well, like I'm going to get a pretty quick sense of that and then we can make the decision that like how to change it. And so I think if we were just working on the protocol and then we had other developers or the ones building clients, it's way harder to convince people to convince someone, like you have to do a lot more influencing and you can criticize that and you can say, well, okay, so then it's just basically, you're making the decisions of who gets onto the network. You have the client and you have the protocol. But I think going back to this idea of earning the trust of developers, which we have an early group of developers who have been building on top of Forecaster, despite, I think an okay dev experience. But, but the idea is that they're realizing that the community is really high quality. The data and APIs are actually open and they're seeing me say on a consistent basis, no, no, no, like we're, we're actively trying to figure out ways to actually support other developers building. And like, these are the trade-offs that we're making. I I'm optimistic that we can actually get to a place where we have a competing client in the next year that has a reasonable level of UX, because that's, that's the other thing there's the theoretical decentralization where, oh, well you could go build your own client if you want, but like if we kick you off our client, you effectively are kicked off the network. So I think that there's a practical level of decentralization and practical bar. That is a much higher threshold than theoretic. Like, yeah, sure. Go write your own client. Like no one, no one's going to do that. They're just gonna go back to Twitter. Whereas if there were two legit clients above a certain baseline of UX, then I actually think you have something interesting. For sure. And, and the cra the crazy thing is this is making me realize what I had missed, which I do think about sometimes, which is I've been focused on the protocol and the protocol is what matters, but the client is actually, you know, yes, there is a, the, the design and the architecture of the protocol will deeply influence the things that emerge out of this over the next 10, 20, 50 years. But really it's the client, the early client and the decisions around small product tweaks, like the shape of the algorithmic feeds, the, what you prioritize, the people who see the community, these things are designing the kind of social layer of this entire kind of wave. Right. And in some ways, I mean, the, the crazy like planning for the success case, right, if this thing actually does grow to be used by billions of people, like these decisions that you're making today could have ripple effects into the shape of society in the future. The same way that, you know, Facebook and Instagram and TikTok, like this product decisions that they make ripple through, like, you know, just how, how people feel and think on a personal level, how societies relate to each other. And that's the super fucking crazy thing about, about what you're doing. Yeah, I think it's well said actually biology, uh, casted yesterday after being off for a little while, he came back and he made an observation where Farcaster is effectively community first, not technology first. And I would quibble a little bit to say that we've actually had to make some interesting technology choices informed by usage, but I do think that there is some truth to that in that you can make all the right protocol choices, like perfectly designed protocol thought through everything, like beautifully written software, but if you can't actually bootstrap the initial community, which is a little harder than people just choose to use the technically best thing. They don't, they, they choose to use the thing that is most interesting. And the thing that makes it most interesting most of the time is other people, right? And so I think the story of like, how did we get from, you know, 10 people using it every day to over a thousand, I don't have like a perfect, you know, we thought through this and we knew it was going to happen. It was a bit of onboard a bunch of people, have a bunch of people turn, continue to make week over week progress. People refer other people because it's kind of interesting. And at a certain point you hit a conversational liquidity point that the network, I can open up the app and there's always something new and interesting, assuming you're following a sufficient number of people. And so we're now at a level of, I actually think we have something where people are referring people to Farcaster. You should check out Farcaster, not because of the product decisions and the technology. It's the people. It's the people. So that becomes another question is like, well, okay, how are you actually going to compete against something like Twitter? Right. It's like 200, 300 million people who are using it every day. And we have a thousand plus, but what I would actually say is you've got to break that problem down differently, so something like Twitter is actually call it 95, 98% entertainment and news for people who use it. And then a very small subset who are these kind of like very online public figure type, very much into tech or crypto who actually use this as this like weird public chat room social network, right? Like my, my parents use Twitter, but they don't tweet. Whereas, you know, I, I I'm having conversations with strangers all the time, and I think that's completely normal, so there's actually a very small percentage of people who use Twitter as a social network. So right away, you can actually go from, oh, this is a network of two or 300 million people using it every day. How could you compete with them too? There are several million people who use it as a social network every day. So that, that becomes a more achievable number if you think about it. And then if you actually say we're only going to focus on one community to start, which is what we have, and it's, let's just focus on the people who might on the margin, and I don't even think this is a primary driver, might be finding that this is a decentralized protocol, ideologically kind of interesting, some NFT features, none of those are game changers, but I think it, if you, if you focus in on that, what, what is the actual size of crypto Twitter? 100,000 daily actives, maybe less. So now, if you, if you actually say it's well, if I have a thousand people using the app every single day, and there are a hundred thousand people in my addressable market that at least trying to go after, I think it's a pretty good that at least trying to go after I'm 1% of the way there. So that like that, that like changes the game in terms of like, okay. And, and actually think we've been even more specific. I'm not even trying to win all crypto people. Like I love Bitcoin. I own Bitcoin. I, I don't think Bitcoiners are going to want to use anything that has to do anything with Ethereum. Maybe at some point, if it's interesting, fine. So what I'm actually focused on as Ethereum people and people who maybe are like, you know, in a different ecosystem, but don't necessarily hate Ethereum, I think even smaller number. And so like, that's the goal. It's just like, just focus on people who are building an intellectually curious and Ethereum, make that the best social network for those people. And, and permissionless innovation and the nice integrations. And then from there, see if you can actually convince another concentric circle of people and, and kind of work your way out. And so I think that that has been informative in the sense that we don't have to work on like virality and all of these things that I think people just take for granted with social networks. And if anything, it's actually much more akin to how Facebook, which if you look at any social network, it is by far the largest, even if it is kind of declining in DAU and what did they do? They started at one college and then they expanded to another set of colleges, all, all kind of permission-based. And then eventually they expanded to everyone with a.edu email address. You can think of that as like.eth, but it was invite only in the sense that you had to have a credential to access Facebook for multiple years. So the most successful social network in all of web two was invite only for two years, and then people are saying the way to grow a social network is to grow as fast as possible with virality. It's like, ah, maybe there's a lesson there. And then that cohort, the university students turn out to be a very interesting cohort that's getting older and other people want to be around them, which could also be potentially said about the current cohort of like Ethereum, crypto, Twitter, like this group is going to become way more influential and nerd snipe the rest of the world potentially. Yeah. That's, that's the belief. Like, so for me, it's, it's.eth and.edu are the equivalent and it's like start your seed, your social network with the optimistic, the people who are curious building the future in eth. And I actually think that that, that is a, that is an interesting group of people to go on a journey to see if you can build a incredibly neutral decentralized social network. In the very least. Yeah. And, and, and maybe, maybe it never achieves that scale, but we're gonna, we're gonna try to do it. This is, it's actually, it's, it's, it's easy to not like there's, there's like real kind of strategic brilliance here. I feel of like, not to, not to, not to compliment you too much, but yeah. Carving down this problem of how do you compete with these incredibly mature social networks that are, it's basically the most ruthless like arena of competition in the world. Right? Like the way TikTok and Instagram are competing, like it's insane. And to carve that down into, we don't need to get everyone like size it down to the.eth people and then design the protocol I imagine would, I mean, some of the protocol features are probably being prioritized because they unlock certain abilities of the product layer, but the protocol is going to be what it's going to be, but the product showing NFTs and like these sorts of things. And the community you're seeding it with. So it's not only like a, you know, target user who we're going after, but it's also like the product features that you're working on is all designed around getting this initial cohort. I feel that's super fascinating. Yeah. Look, I we'll see if we can do it. I think that there are credible other projects out there that maybe their strategy ends up appealing more to these, these types of folks. So that that's like one way. One other thing is the stated preferences. We want this, but the reveal preferences, I like having a million followers on Twitter and I'm not really at risk of getting de-platformed so it doesn't matter and I think that that's also pretty reasonable from the individual's perspective, I'm optimistic that if you focus on quality and try to just make the average conversation on Farcaster is one of the highest quality places that anyone is talking about anything, crypto or web 3.0, I think that's a good three and I don't even think we're there yet. I think we have quality, but I think it can get even better if that can happen. Then I actually think you can attract a very interesting group of people to be using at least a client. Hopefully ours at least to start every day, which then developers all of a sudden say, this is actually a really interesting audience to go build an app for because not only, not only are they interesting people within a community that you bootstrap the other side of the marketplace too, because these are people who are early adopters, who have money to spend, who have like, you know, creativity to lean into new use cases. With, with also the primitive of, you know, every user on Farcaster has to have a public and private key, which as a primitive by itself is really powerful. Right. Like I think it's one of the reasons people are so excited about building an Ethereum is like when you can identify every user by a public and private key, all of these zero knowledge use cases start to pop up. It moves from the realm of theoretical because you've solved the, the like cold start problem of, well, how do you get public and private key infrastructure for every individual? It's like, turns out it's like some of the financial speculation that I think has driven cryptocurrency adoption has built out a huge ecosystem that you can now play around with some of these ideas that if you go back to the web of trust, GPG, PGP, like all of that stuff, that was always kind of this dream. And it goes back to this idea of a key base. I think very noble in what they, what they're doing.