This podcast series is presented by Archetype. Archetype is an early stage venture capital fund focused on backing crypto entrepreneurs who are working to accelerate the decentralized future. We lead investments in C-stage companies and are always open to speaking with crypto native founders. For more information on our team and portfolio, go to archetypes.fund. This season of cross-chain examination is sponsored by Talos. Institutional investors across the digital asset industry have connected to Talos to access the entire crypto ecosystem via a single point of entry. Whether on the buy side or the sell side, from Wall Street's most storied firms to crypto native come-ups, institutional investors are using Talos to accelerate their digital asset offerings. Talos provides technology infrastructure that powers the full trade lifecycle. Talos' integrated platform supports the entirety of the trading process, from price discovery to execution and settlement. Check them out at talos.com today. Hello everybody, welcome to another episode of cross-chain examination. I'm your host, Catherine Wu. Each week on cross-chain examination, we have on the smartest voices in the crypto industry to tell us what's top of mind for them. Decentralized social media, Web3 social, decentralized social graph, these are all part of a larger narrative that have trended lately in recent years in response to the increasing frustration with the walled garden model of traditional social networks, aka the ones we probably all use on a day-to-day basis currently. The frustration also stems from a lack of empowerment around your own user data and the way these walled gardens have evolved to no longer serve outside developers who may want to build on it. Given that the ethos of crypto is entirely based on optionality, user empowerment, can it be extended to social networks and platforms? With us today is Dan Romero, co-founder of the Farcaster Protocol, a, this is what I got from the website, sufficiently decentralized protocol that empowers developers to build novel social networks. We'll get to more of this in a bit. A little bit on Dan, he's one of the earliest crypto advocates having been the 20th employee at Coinbase. As a note, Coinbase is now a public company with over 4,000 employees. With as many years of experience and wealth of knowledge, I'm super excited to have him on today. And with that, welcome to the show, Dan. Thanks for having me. I'm super grateful for your time. And I think this is a really interesting topic. So let's dive in. As promised, let's start with dissecting the thesis behind Farcaster. So starting off with a super broad question, what is the main difference between the likes of Twitter, Reddit, and Farcaster? And in other words, why build Farcaster as a protocol versus a social network platform was just less restrictive APIs? So I think it's worth stepping back and thinking about the kind of first era of the internet, the more recent era of the internet, and kind of where we are headed. So the way to think about that, web one, you have the World Wide Web kicks off with Netscape. And the foundational protocols for most of the apps and services and websites that people were using were completely permissionless and open, right? So in the case of the web, the protocol underlying it is HTTP. And you have domain names, which run on DNS. And then in the case of email, you run on SMTP, right? Most users don't even know the underlying protocols. They think of the end use applications, right? So you use email, you use Gmail, or with the web, you just think of websites, right? And I don't think of Airbnb and Uber necessarily using the same thing, right? Because in many ways, you actually use an app on a phone. But all under the hood, the way the APIs and kind of these applications are built, they're using kind of open protocols that are completely permissionless. Airbnb didn't need to write in to get permission to start building Airbnb. Fast forward to kind of the web two era, and certain apps were built kind of in this open standard, but then other apps were built in a way that kind of ended up centralizing a lot of control. And actually, if you use those examples, Airbnb and Uber, they both are examples of apps that kind of have their own network effect, and you can only access Airbnb through Airbnb's app, right? And so in the web two era, all of the social networks that kind of ended up getting to scale have that similar effect. So if you think of Facebook, if you think of Twitter, YouTube, the kind of relationship between a user or a publisher, right? So if you put stuff on those social networks, and their audience is controlled by that centralized entity. And there are a whole bunch of reasons that that happened, the primary being that it actually offered a superior user experience. And so naturally, people use the best user experience, you kind of have these big centralizing forces. And that's why you have all these big networks. However, 2022, we are in an era where there's a lot of consternation that is kind of being directed at some of these platforms, where they're making decisions on whether it's content moderation, how the algorithm works, the feature set that you get to use. I think a most recent example is Instagram changed the way they do their feed to be more algorithmic like TikTok, and a whole bunch of high profile people and other users complained. And there's no way for those users to actually do something different. Actually, there was an app that launched called OG, that was meant to be just kind of the original experience of Instagram. And it was actually removed from the App Store because it was violating Instagram's terms of service. And so kind of all of those things have contributed in my mind to a need for moving social networking back to this kind of web one era of open protocols where you can build whatever you want. And you don't have to ask anyone for permission as a developer. And so Farcaster is kind of building on that in the way that it guarantees two things. The first is that a user who's publishing information on Farcaster has a direct relationship with their audience. And the example I always like to give is if you are publishing on Twitter or YouTube, and one of those platforms decides that they no longer want you on that platform, you don't get to export your audience, it just disappears overnight. So you could have spent 10 years building a big following on YouTube, they kick you off for whatever reason, right? Doesn't have to be political. You don't get a one last chance to get your followers, right? Contrast that to Substack, where it's built on top of email, which was one of those protocols I mentioned before. And Substack allows you even if Substack were to kick you off Substack, which I don't think they generally do, you can export your email list. So that's a pretty neat feature of being built on kind of an open protocol like email. The second guarantee for Farcaster, and I think you brought it up at the beginning, is as a developer, I have direct access to the data and APIs of the underlying protocol. And in our case, because it's kind of this public social network, you can think of that as the social graph, the profiles, the posts, the likes, the follows. And that's important because if you actually look at the early era of social networking, and the two examples I'll bring up first is Facebook. Facebook had an app platform, Zynga being a pretty prominent company that had been built on top of that, that within a very short period of time when Facebook changed their strategy, basically had a severe material impact on Zynga's business in terms of ability to monetize because of some decisions that Facebook made. And then similarly, in the early days of Twitter, Twitter didn't even have a mobile app. All of the mobile apps were third party. And at a certain point, around 2014, 2015, Twitter made a strategic decision that at the time probably made sense for their company, but had a big impact on all of these independent developers who had spent years building kind of applications in an ecosystem. So with a protocol based social network, like Forecaster, that's impossible, because developer always has the ability to directly access the underlying data and APIs, again, similar to the web or email. Yeah, there's a lot of good points I want to dissect there. I mean, first an anecdote, which is like, for creators and developers, and like basically users, which was like the three thing most important parts, I think, to like any like social app or network, and you want kind of all three sides to like developer wise, like, personally, I think it's a net good for your ecosystem for people to be able to build on it, use your API's and basically like built on top of that. I think like the web two companies probably disagree, the user side, obviously, your users, your lifeline. And then as a creator, like any social platform, you also need creators, right? Because what is there otherwise to consume? So creator aside from like being able to port their content, it's also being able to port their following. I don't know if you know the story, like I got into crypto, like super early days by starting this like little niche YouTube channel. I don't really talk about it because it's embarrassing. But like, now that I'm relaunching this podcast, and I'm kind of like going back to my account, I'm like, Oh, man, I actually built up like a very, very small, but like dedicated following kind of wish I could just like, put that over and now have to like start from zero again. So that's just like a minute, like problem on the creator side. But as you were talking about the difference between you know, web one with two like apps, versus any social apps built in the crypto space, I think one big difference is basically in order to like use any crypto apps or interact with crypto, you actually need to like own crypto first. And so like it for me to get online, I just need like a router and modem. But for a crypto app, depending on what network they're built on, I also need to use the native token. And so I think like, sure, as the end user, I don't have to think about how email works. I don't need to know what protocol it's built on. But as a user, like to use a crypto app, I need to kind of know what the underlying network is so that I can like pay gas fees and like do these things like, at least in the current state. And so I guess going back to my original question, which is like, are there things that I guess like a token network can enable for Forecaster that like building in a web architecture can't? Yeah, so I think two things. So the first is, we take the kind of requirement that you need to have crypto in order to use an app pretty seriously in that we think that that is a bad user experience, particularly for something as kind of consumer oriented as social. It's one thing if you're using something like Coinbase, where you're investing in a cryptocurrency, it's kind of hard to not have to, you know, do all this onboarding and then ultimately connect your bank account so you can go buy because that's what you're trying to do there. Whereas with a social app, you're actually just trying to kind of like what content is here? Who should I follow? And so that's a much lighter weight requirement in terms of at least interest. And so I think that the app experience should mimic that. And so one thing that we've done early days is use something called meta transactions. So when you onboard to Forecaster, we actually do the on-chain transaction for you. Yet the architecture is actually still done in a user controlled way, which I think is actually kind of cool. We use something called OpenGSN. But you can kind of think of it as the user creates a new wallet to sign up for Forecaster, but they didn't have to have any Ethereum to actually do that initial transaction, which puts the kind of core primitive, which is the only thing that we actually put on chain, which is the username, kind of your identity, and mapping that to an Ethereum address, which is a public key, which allows everything else in the network to be off-chain, really fast, easy to use, because under the hood, everything magically is being signed with that crypto wallet. So that's kind of been an important product experience that we've really tried to hone and improve over time. But to step back to say, what does a crypto powered network enable? I think a core primitive that we're starting to see some interesting initial applications pop up around is the fact that everyone on Forecaster, by definition, has to have a public and private key. And I think if you kind of go back to the history of some of these computing platforms, the early web, effectively, people made an assumption that everyone has an email address, right? To be on the web, you probably had an AOL account in the US at some point, and that came with an email address. And so one of the reasons email addresses became the authentication mechanism for virtually every website and app was because they were kind of universal. And as we shifted to mobile, you actually saw a shift from making an assumption that a user had an email address to, well, if you're on a mobile phone, you have a phone number by definition. And so actually, a lot of the kind of best in class mobile apps shifted over to an assumption that you just have a phone number. Upload your contact book to find friends, use that as authentication, right? It's like, it'll send you a text message so you can log in. And so I think where we're headed with Forecaster is we're actually adding a new primitive and a strong assumption you can make about anyone who is already onboarded to Forecaster. And we're doing a lot of the work to onboard the users to the protocol. But as a developer, you can actually make the assumption that any user within the Forecaster ecosystem has a public and private key. And with that, it's actually a canvas for a whole bunch of new ideas. An example being zero knowledge proofs is you can actually permissionlessly start to build new apps and experiences that make that assumption that a user has a public and private key that you can kind of start to create new experiences that otherwise would be very difficult to bootstrap. Yeah, it's the sign in Ethereum button that I'm hoping to see kind of like everywhere in a few years. Something that I've noticed about Forecaster also specifically, is I've seen a lot of developer excitement being attracted to build on it. And like, you know, I was looking at your feed this morning and you were like, Oh, I didn't realize like paragraph, which is like a web free newsletter, like integrated with Forecaster, like that's awesome for missionless innovation. And so I think those are like really encouraging early signs. And so as you kind of look at this, what metrics in your head do you think you need Forecaster to get to for you to consider it as hitting critical mass? The way I think about it is you start with what do we ultimately want to accomplish and we want to build an internet scale protocol. So you think of those core protocols that I mentioned at the beginning, DNS, HTTP, SMTP, I want Forecaster one day to be at that level, which is a pretty ambitious, big goal. And in order for us to get there, that by definition means we have a lot of developers building new apps and services on top of Forecaster, the protocol. And if you then kind of step back and say, well, how do you get a whole bunch of developers building on a protocol, at least from a social protocol, which is a little different than DeFi, and I've been in crypto for a while, and so I spent a lot of time trying to kind of think through this. What a social developer cares about is addressable daily active users. And the analogy I always like to give is the reason the app store on the iPhone is interesting for developers is not because of some fundamental technology breakthrough from the app store. If anything, it's actually kind of draconian. Obviously, the app store cut is limiting from a business model standpoint. But the reason people still deal with all of these app store restrictions is the fact that Apple has a billion people around the world, and they tend to be higher income people who have an iPhone and are carrying around with it on their physical person every day. So better than a daily active user, it's like daily active carry around a device that you're checking all the time. And so to kind of bring that back to Farcaster, the thing that's going to attract developers who want to build new apps and services is the total number of people who are using at least one Farcaster app every day. And so from our standpoint, the way to solve for that is build the first app, right? So you are the one that is doing a lot of the work for onboarding, figuring out, okay, where's kind of the friction on that onboarding process, but also what is a compelling feature set to get a sufficient number of people to be checking some app in the Farcaster ecosystem every single day, which now all of a sudden means an app developer who's building Paragraph or Pearl or any of these apps that are starting to get built in the Farcaster ecosystem, they have an addressable market of crypto curious, daily active users that they can make the assumption that they have an Ethereum wallet just based on the architecture. So if you're a web three or crypto builder, and you have a new app or service, even with Farcaster being much, much smaller than a traditional social network, all of a sudden that social graph becomes actually a great place to potentially go launch your product, because you know that the average quality of the user on a variety of metrics is higher. And that, I think, becomes the flywheel if we can continue to grow, again, the total number of daily active users, you attract more developers, those developers build new apps and services, which attract other people who want to try those out. And I think we're starting to see early signs of it. But I think we have a ways to go before it truly hits critical mass. And so to maybe give you a quantitative number, we have roughly 3000 people in our beta today for Farcaster, I would expect that it probably needs to be two orders of magnitude larger. So kind of in the hundreds of thousands of total people signed up on the network before I actually think that you've hit that critical mass where developers now are kind of thinking Farcaster first. And I think we're having some early signs of that today. But we have a ways to go before we truly get there. Yeah, if I'm not wrong, all 3000 users, you onboarded yourself. Yeah. So the first 400 I did a video call with, and actually, what's interesting is most of those people turned, maybe it's me, or maybe it was the wrong set of people to go after in the early days. And I think we've gotten a lot better about kind of figuring out who is actually going to be most interested in Farcaster at least today. And I think one set of features that we built last year that ended up working out pretty well is we natively integrated an NFT feed alongside the kind of Twitter-like experience. So in some ways, it's kind of hearkening back to the old school Facebook newsfeed, where you had posts, but you have all these kind of like, oh, this person changed their profile photo, etc. And in our case, it was taking what you were doing on chain and kind of mixing it with the kind of Farcaster native content, which looks a little bit more like Twitter. And I think we just kind of continued to iterate week over week over the last year. And at some point in the spring, we kind of hit an inflection point, I couldn't tell you exactly what happened other than the conversational liquidity on the app, and I follow everyone on the app, so I generally get a sense for what's going on. It got to a point where you could actually open up the app, and there's probably a new post within call every minute. And actually, we just hit that, that like from an actual threshold in September, we got to a point where on average, there were enough posts that every minute in the month of September, there was a new Farcaster post. And so the kind of feeling like this is actually now a vibrant community where there's actually stuff going on. That is the big driver of what's actually been I think, growing the network now, whereas maybe some of the features we had before were good enough to kind of bootstrap it. But actually, if I if I talked to anyone on Farcaster today, the primary reason they're using the network is they actually find that the people on the network and the conversations on the network are interesting in and of themselves. And so I think that that's an exciting stage for us, because it means we probably can continue to grow the network for some amount of time, where we don't have to necessarily add any one new feature. And it allows us to actually focus really in on keeping the community really high quality. And so you know, trying to avoid spam bots and all this other kind of stuff that I think plagued a lot of other social networks. And then similarly focus on the protocol. We made a decision last year when we launched the beta, we launched v1 of our protocol knowing full well it wasn't going to scale and it wasn't going to be perfect. And we're in the process now of migrating from the first version of the protocol to the second version of the protocol with a year's worth of learning under our belt. And all the mistakes that we made, we're hopefully correcting and should reduce the number of kind of like pain points, especially for developer projects.