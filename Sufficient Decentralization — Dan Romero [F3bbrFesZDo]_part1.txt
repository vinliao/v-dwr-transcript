what is the right model that we can actually figure out so that these systems, to your point, where actually everyone has a say based on the value they contribute or the usage or whatever the right metric is. Hello friends, Jess here from C-Club. Welcome to season three of Building at the Edges. We host conversations with the top innovators, thinkers, and builders at the intersection of crypto and community. Today I'm bringing you a conversation with Dan Romero. Dan is the co-founder at Farcaster, a sufficiently decentralized social network. You might've heard of it referred to as the Purple App. This conversation with Dan, we get into, well, him defining what all that means. What is a social network? What is a sufficiently decentralized social network? How does he imagine the business model around Farcaster evolving? What does ownership in a decentralized or sufficiently decentralized social network look like? Try to get an understanding of where he sees the value in Farcaster versus Web2 apps like Twitter or Facebook. What are the differences? Why might you want to participate in one versus the other? I think back to the early days of social media when I was first jumping onto Twitter and all the questions I would have had for Jack and for Ev who were building that app and just really excited about this opportunity to sit down with Dan. And we get the inside scoop on how you can get an invite to Farcaster. Farcaster is only invite only at this point, but if you listen to the end, we'll give you some magic words and steps on how you can go get your username and access the network today. So make sure you listen right the way through though you're not gonna have a hard time doing it. It's an interesting conversation. Dan has just thought really deeply about this. And I think there's a lot to learn both in how he's taking this product to market, some of the trade-offs and ideas they have under the hood and what the future of decentralized or sufficiently decentralized social networking might look like. So let's get into it. Dan, welcome to the pod. Hey, thanks for having me. Okay, so I think for many people who are listening to this, they probably heard of Farcaster. They probably know a couple of people who use it. Maybe they've been following your Twitter account rather with probably notifications turned on to look for an invite. But I'm very curious, like how do you describe Farcaster to folks who maybe haven't heard of it before? Farcaster is a sufficiently decentralized social network and it makes two strong guarantees. The first is if you're a user of the network, you have a direct relationship with your audience and no individual, company, country can take that away from you. I think the analogy I always kind of use is with email. If you have an email newsletter and you use MailChimp or Substack and one of those platforms decides that they don't wanna work with you anymore, you're free to export all of your subscribers, move over to the other platform and go about sending your newsletter. Like your subscribers probably wouldn't even notice that you changed providers. Contrast that to another centralized social network like Twitter or YouTube and you spend 10 years building an audience there and for whatever reason, that network decides that they don't want you, you don't get to export your audience there. That audience actually is part of the terms of service of those networks. And so with Farcaster, it's more like email in the sense that anyone who chooses to follow you, that is a kind of directional relationship between that person and you and so if you were to change clients on the Farcaster network, you would still be able to kind of reach all of the people who have opted into following you. And then the second guarantee for the network is that as a developer, you have direct access to the underlying data and APIs of the network. And I think to use another example from the past, Twitter used to have a pretty vibrant third-party developer ecosystem. There were a lot of third-party Twitter clients. Pull the refresh is my favorite example. That was invented by a third-party Twitter client called Tweety, which ended up getting acquired by Twitter. So many people don't even know this. Twitter has the patent for pull the refresh, kind of like Amazon has the one-click checkout. And honorably, they have actually made it kind of a, you know, anyone can use this. And so basically every app has pulled the refresh now. But that was actually because Twitter had this really permissive API. You had all these smart, creative developers playing around with like new ways to, and this is in the early 2010s when feeds were a little less mature on mobile. How best do you deal with refreshing a feed? And so that ecosystem evaporated overnight in, I think it was like 2014 or 2015, when Twitter reasonably like said, hey, we need to actually focus on monetization. We're gonna do that through ads. So in order to force people to look at the ads, we're gonna kind of hamstring the open APIs. There were a few other reasons that contributed to that, but it was the company was thinking about going public. They needed to kind of actually capture the time spent in their clients so they could show those ads. And so with Forecaster, you as a developer, if you wanna build an app, it can be open source, it can be a commercial service. You have full access to the data and APIs. And in the relationship, similar to kind of the user relationship, you as a developer, your relationship with users is between you and that user. So if I install your Seed Club client app that's built on top of Forecaster, there is no kind of corporate terms of service change that can come in and say, oh, sorry, that app no longer works with Forecaster and you, Dan, can't decide to use that app. And so I think that those are the two core components of the network. And effectively for us, if those things hold true, what we hope is over time, you're gonna have a whole ecosystem of apps and clients that allow people to choose what experience they want for this kind of public social network and kind of what trade-offs, what type of content moderation, algorithms, all of that stuff is gonna be very much consumer choice. And I think we've seen that with email or browsers that has led to better outcomes. It still actually has a lot of centralization in both of those markets. Like we can talk about that a little bit, but I think what's worth pointing out is Google Chrome came after Internet Explorer and Firefox, right? When they were dominant. And so I think that if you actually do build a mousetrap in those markets, people will actually adopt your offering. It might be hard, but you do actually have choice because those are built on permissionless decentralized protocols. So I think you used the word a sufficiently decentralized social network. I'm assuming some of those sort of rules that you've been placed or were sharing there are kind of part of that definition of sufficiently decentralized, but perhaps you can sort of expand on what that means. And then I think maybe touching on where those points of centralization exist in email might be an interesting context to dive into. My co-founder Varun wrote a blog post at the beginning of this year called sufficient decentralization and social networks. And for us, what we were trying to communicate is our philosophy around when you're trying to kind of build one of these new networks, if you view centralization and decentralization as a spectrum, if you optimize everything for decentralization, which I think if you kind of listen to maybe some of the rhetoric and the ideological components of crypto, and I think just broadly cyberpunk culture, and I think you get to maybe an ideal state for some, but from a practical use it every day, especially for mainstream users, I think it's too difficult. And then similarly, the centralization side, you get massively improved user experience. I don't think anyone is saying that the execution on product details for the kind of major social networks are bad. I think some of their kind of like product strategy and like how they monetize result in some bad decisions, but overall, like using Instagram, the performance of that feed is pretty incredible. If you think about just like you can endlessly scroll it and just like the delivery of the content or YouTube, the ability for it to just kind of play really high quality content within a click on your phone, a lot of that is the benefits of centralization. But I think that the downside of centralization is you're forced into business models and potential choices from a strategic standpoint, such as not having third-party clients that can be really frustrating for consumers. And then especially if you're either a developer or someone trying to build an audience, that is even worse if you suddenly overnight either lose the app that you were building on top of that platform or your audience. And so from our standpoint, what you do is you actually wanna start with the user experience, which is what gets people to use stuff, which is the lifeblood of any of these networks, and then work your way towards decentralization to the point where, and it's a little squishy, you deem it, it's sufficiently decentralized. And so from our point of view, the thing that's most important about a network like Twitter is the kind of core identity primitive of saying, I am X and this is where people who want to follow me can find me, that like kind of digital pointer, similar to a domain name, that needs to be decentralized because then if you were to leave any one service provider, to go back to the email analogy, if I have a newsletter, danromero.org, and I wanna send email from that domain, because of the way both DNS, the domain name system and email work, I can just change a little record with my domain registrar, then it's called an MX record. And by doing so, I can just simply change the server that's actually sending my mail out and then the system will work. And so I think from our standpoint, that is actually a sufficiently decentralized system in the sense that it's not like you're running your own mail server when you're using one of these kind of newsletter tools, you're actually using a corporate tool, like they have terms of service, they can kick you off, but because you have the ability to exit that centralized service and interoperate with all the other email addresses out there, that I think helps enable this concept of sufficient decentralization. And one interesting thing to think about email is despite it being kind of a permissionless, decentralized protocol, right? It's existed for a really long time. The way the market works today is it's actually a couple of large email providers, the big consumer ones like Gmail and Microsoft and Yahoo, but also you have a couple of like the, call it developer oriented email systems. So something like Amazon or I think SendGrid's another one. And the deliverability of any given email that is being sent is actually not like, kind of like an egalitarian thing. So if you run your own mail server in your basement and you have a new domain, say you registered, you know, a new dot X, Y, Z domain for your cool new company, good luck trying to get any of those emails to show up in the inbox, right? So the default is just like, sorry, like that's probably spam. We're not gonna make it land in the inbox, which if you just know how consumers work, if it's in spam, basically it doesn't exist. You have to have a very determined user to find it. And so that's actually something we think a lot about for Farcaster because despite what I just said about email before, there are natural tendencies as these networks develop over time to have new points of centralization and new points of potential failure for kind of like this exit with interoperability. And so one of the things that we're actually trying to think through as we design the Farcaster protocol, while theoretically the idea that the identity being the only thing that's like core promise of decentralization gets you to kind of a practical level of decentralization, it actually requires a little bit more where in terms of how Farcaster works, we have this concept called Farcaster hubs, which for those who are kind of into crypto, I think of it as like an Ethereum node for the Ethereum network, Farcaster hub is that for Farcaster kind of social content. But those Farcaster hubs also have to be something that we think through and make the right trade-offs to keep those decentralized. Because even if you take the identity primitive, which is the thing that actually lives on the Ethereum blockchain for Farcaster, if the hubs inevitably become centralized, it doesn't matter if the on-chain component is decentralized it's actually the point that ends up being most centralized is the place that you're gonna have all the problems. And I think another analogy in crypto that we're kind of working our way through right now, it hasn't really been a huge issue, is Ethereum post-proof of stake now has a couple of really large, what are they called validators or basically Coinbase and a couple of others. And there's a whole bunch of back and forth that's happening where people are talking about OFAC compliant blocks and whether or not the different kind of proof of stake operators are actually censoring transactions. And so that's a great example of where, yes, actually the distributed nature of Ethereum ownership checks the box for proof of stake to make it work. But the revealed preference of how people participate in proof of stake means that there's natural centralization. And so I don't think we have everything solved like by any means, it's like an ongoing process. But I do think one thing to think about in these systems is wherever you think you've solved the decentralization, you may have, but you may be creating a kind of like second order effect where there's now a new area that's the, call it the weakest point in your kind of game of decentralization versus centralization that you have to kind of game theory think through of like, how do you prevent this from getting too centralized? And to be fair, Bitcoin has actually had this for a long time, right? You have a very small number of mining pools that from a game theory standpoint, don't actually want to do double spends because it would actually lower the price of Bitcoin, which that's where they get their value. I think it's a really rich area for exploration and kind of thinking through these systems because it's not as deterministic as maybe an engineer would like it to be. Yeah, I think the deeper you go into these networks or even into DAOs, the harder it is to sort of parse where, I mean, there's just this natural centralization that happens purely based on relationships or on where value is flowing. And I like that approach of, you know, just sort of recognizing and attempting to address that where it's warranted or maybe most warranted. I think there's another piece of centralization that we think about from like a more consumer preference standpoint, which I think is a thing that I definitely want to dive into with you. Cause I think you've been very, at least from my point of view, you've been very pragmatic and focused on building useful experiences for members who join Farcaster. And I think there's some richness to get in there, but you know, this idea of exiting and being able to leave. And I guess like Ben Thompson talks about aggregation theory quite a bit, and it's sort of where attention aggregates is where value flows. And definitely that's built on sort of more web two business models, but like, does exit matter if where you're exiting to is a barren wasteland and nobody is there paying attention to you? Like, does this depend on there being a significant number of individuals using a front end and won't sort of Farcaster most likely just be that front end? I think it's spot on. And it's a question I think about all the time in that. So there's the centralization and then there is like, okay, is it like technically decentralized in the sense that do you have a second client? And then there is practical, right? So if I'm using the client, our company Merkle Manufacturing has built for Farcaster, and I spend a lot of time building an audience, and then there is no viable alternative. If for whatever reason, Merkle says, hey, we don't want you to use the client. We think you're behaving badly and like, we just don't want to do business with you. Well, if there is no alternative, then while technically you could write your own client, but you're not going to. And so then effectively what you have is a company with one client that has a very permissive open database. And so, and one of the reasons I think we've been so slow to kind of get to like kind of a broader public launch, there are a variety of reasons, but one of them is I think it's tough to go call yourself a protocol when you only have one client, especially with something like social, right? Ethereum, I think is a little different in the sense that like, okay, you can have multiple implementations of nodes, but as long as I can kind of run another node, I'm probably not going to get blocked because the default implementation, but I think it's worth thinking about that. I think going back to the consumer preference thing though, that's a really important point because there were two ways to frame it, is I think consumers, or if you want to take a kind of more negative connotation is consumers are lazy, just people are lazy in general. And so what they optimize for as a revealed preference, most of the time, most people, is convenience, which I think is actually just a more positive way of saying it's like you make something easy and convenient, people are going to use it. And I think like, if you look at the successful set of software internet companies, the ones that tend to win in the consumer space tend to make the most kind of like convenient, easy to use, intuitive experiences. And an interesting example of this is where I used to work, Coinbase, I spent the five years at Coinbase, and then even since everyone always talks about how Coinbase is so expensive, right? And it's like Coinbase also is holding your crypto, if you're a hardcore person, you're like not your keys, not your coins. And the reality is that Coinbase has 100 million customers and is still continuing to grow customers despite being twice as expensive as everybody else. And they're not giving you the full freedom that you would if you hold your own crypto with your own self-custodied wallet, because most people don't want to deal with the hassle and they're willing to pay a premium for convenience. And I actually think in some ways, this is why certain people just don't understand Apple, because they want to put everything into a kind of feature checklist. And Ben Thompson's written about this as well with what Clayton Christensen got wrong in terms of talking about the innovators dilemma and why Apple, despite being kind of this premium offering, hasn't been disrupted on the low end. And for those at home who don't know Clayton Christensen, he's a professor, used to be at Harvard Business School, I think he's since passed away. And he wrote this book called the Innovators Dilemma that just talks about how usually what happens in any given market is you have the kind of market leader tends to focus on the higher end of the market and then inevitably you have some kind of cheaper low end that comes in and then kind of works their way up the value chain and disrupts the incumbent. And it's kind of as like one of his last points in this framework is that he said that the iPhone was going to be disrupted by Android, just in the same way that the Windows, Windows, Intel, Microsoft, Intel, duopoly ended up eating through all of IBM and all this other kind of stuff. And that was wrong. If anything, Apple has actually gained share in developed markets. And the reason is that consumer preference, assuming you have some level of ability to afford it, is for convenience and the kind of product design and some of these other things. And so then kind of going back all the way to how that affects forecaster, I think one thing that we've had a strong belief since day one, and part of this, I think is informed by the Coinbase experience, is if you build a really well-designed and kind of convenient, easy to use user experience, that is actually going to be the single largest driver of usage for most people, right? Like there are always gonna be some ideologues who are willing to use the more technical thing because they really believe, and I actually really respect that. But I think if you just take the practical realities, most people don't have that level of energy or time. And so from our standpoint, and this goes back also to the sufficient decentralization point, is what we're trying to offer people with Forecaster, at least today for the early adopters, is just like make a better product experience that also happens to be built on top of decentralized protocol. Not a okay product experience, but it's built on a decentralized protocol because they're reveal preferences, they're not gonna use it. They're gonna continue to use Twitter or wherever else that they already have that habit. And so I think it's like a deep respect for, and this is actually, I think, something that people in crypto, web three, whatever you wanna call it, tend to dismiss is the web two companies, the reason they got so big is because they had a deep respect for that, those like kind of laws of consumer psychology and revealed preference. I think I may have said this, there's a stated preference, I ask you what you want, and then what do you actually do? And so I think that that's been a really informative thing in terms of how Varun and I have thought through some of the product challenges. And the famous line there obviously is, Henry Ford would say, if I'd asked my customers what they wanted, they would have wanted a faster horse. I think there's also a component that in Silicon Valley and then later internet product culture, Steve Jobs was famous for not asking people what they wanted, it's just know what people actually want. And there's definitely truth to that, especially when you're building consumer experiences, but there is this kind of thing where you have to pay attention to what actually the revealed preferences are from people, otherwise, you're just gonna sit there and you're kind of almost like a hipster. You're like, well, I built the thing that people should like, but they just happen to not use it. Well, it's like, okay, cool. Is an art project, like what's the goal? And if you're trying to build something that people are gonna wanna use every day, you really have to dial in on what are the revealed preferences of people. And then if you're trying to do that in a kind of protocol oriented way, it's like, how can you match the reveal preferences of people while still building in kind of this protocol first way at a time?