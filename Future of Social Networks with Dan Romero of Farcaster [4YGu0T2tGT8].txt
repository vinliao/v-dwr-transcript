This podcast series is presented by Archetype. Archetype is an early stage venture capital fund focused on backing crypto entrepreneurs who are working to accelerate the decentralized future. We lead investments in C-stage companies and are always open to speaking with crypto native founders. For more information on our team and portfolio, go to archetype.fund. This season of Cross-Chain Examination is sponsored by Talos. Institutional investors across the digital asset industry have connected to Talos to access the entire crypto ecosystem via a single point of entry. Whether on the buy side or the sell side, from Wall Street's most storied firms to crypto native come-ups, institutional investors are using Talos to accelerate their digital asset offerings. Talos provides technology infrastructure that powers the full trade lifecycle. Talos' integrated platform supports the entirety of the trading process, from price discovery to execution and settlement. Check them out at talos.com today. Hello everybody, welcome to another episode of Cross-Chain Examination. I'm your host, Katherine Wu. Each week on Cross-Chain Examination, we have on the smartest voices in the crypto industry to tell us what's top of mind for them. Decentralized social media, Web3 social, decentralized social graph, these are all part of a larger narrative that have trended lately in recent years in response to the increasing frustration with the walled garden model of traditional social networks, aka the ones we probably all use on a day-to-day basis currently. The frustration also stems from a lack of empowerment around your own user data and the way these walled gardens have evolved to no longer serve outside developers who may want to build on it. Given that the ethos of crypto is entirely based on optionality, user empowerment, can it be extended to social networks and platforms? With us today is Dan Romero, co-founder of the Farcaster Protocol, a, this is what I got from the website, sufficiently decentralized protocol that empowers developers to build novel social networks. We'll get to more of this in a bit. A little bit on Dan, he's one of the earliest crypto advocates having been the 20th employee at Coinbase. As a note, Coinbase is now a public company with over 4,000 employees. With as many years of experience and wealth of knowledge, I'm super excited to have him on today. And with that, welcome to the show, Dan. Thanks for having me. I'm super grateful for your time. And I think this is a really interesting topic. So let's dive in. As promised, let's start with dissecting the thesis behind Farcaster. So starting off with a super broad question, what is the main difference between the likes of Twitter, Reddit, and Farcaster? And in other words, why build Farcaster as a protocol versus a social network platform was just less restrictive APIs? So I think it's worth stepping back and thinking about the kind of first era of the internet, the more recent era of the internet, and kind of where we are headed. So the way to think about that, web one, you have the World Wide Web kicks off with Netscape. And the foundational protocols for most of the apps and services and websites that people were using were completely permissionless and open, right? So in the case of the web, the protocol underlying it is HTTP. And you have domain names, which run on DNS. And then in the case of email, you run on SMTP, right? Most users don't even know the underlying protocols. They think of the end use applications, right? So you use email, you use Gmail, or with the web, you just think of websites, right? And I don't think of Airbnb and Uber necessarily using the same thing, right? Because in many ways, you actually use an app on a phone. But all under the hood, the way the APIs and kind of these applications are built, they're using kind of open protocols that are completely permissionless. Airbnb didn't need to write in to get permission to start building Airbnb. Fast forward to kind of the web two era, and certain apps were built kind of in this open standard, but then other apps were built in a way that kind of ended up centralizing a lot of control. And actually, if you use those examples, Airbnb and Uber, they both are examples of apps that kind of have their own network effect, and you can only access Airbnb through Airbnb's app, right? And so in the web two era, all of the social networks that kind of ended up getting to scale have that similar effect. So if you think of Facebook, if you think of Twitter, YouTube, the kind of relationship between a user or a publisher, right? So if you put stuff on those social networks, and their audience is controlled by that centralized entity. And there are a whole bunch of reasons that that happened, the primary being that it actually offered a superior user experience. And so naturally, people use the best user experience, you kind of have these big centralizing forces. And that's why you have all these big networks. However, 2022, we are in an era where there's a lot of consternation that is kind of being directed at some of these platforms, where they're making decisions on whether it's content moderation, how the algorithm works, the feature set that you get to use. I think a most recent example is Instagram changed the way they do their feed to be more algorithmic like TikTok, and a whole bunch of high profile people and other users complained. And there's no way for those users to actually do something different. Actually, there was an app that launched called OG, that was meant to be just kind of the original experience of Instagram. And it was actually removed from the App Store because it was violating Instagram's terms of service. And so kind of all of those things have contributed, in my mind, to a need for moving social networking back to this kind of web one era of open protocols where you can build whatever you want. And you don't have to ask anyone for permission as a developer. And so Farcaster is kind of building on that in the way that it guarantees two things. The first is that a user who's publishing information on Farcaster has a direct relationship with their audience. And the example I always like to give is if you are publishing on Twitter or YouTube, and one of those platforms decides that they no longer want you on that platform, you don't get to export your audience, it just disappears overnight. So you could have spent 10 years building a big following on YouTube, they kick you off for whatever reason, right? Doesn't have to be political. You don't get a one last chance to get your followers, right? Contrast that to Substack, where it's built on top of email, which was one of those protocols I mentioned before. And Substack allows you, even if Substack were to kick you off Substack, which I don't think they generally do, you can export your email list. So that's a pretty neat feature of being built on kind of an open protocol like email. The second guarantee for Farcaster, and I think you brought it up at the beginning, is as a developer, I have direct access to the data and APIs of the underlying protocol. And in our case, because it's kind of this public social network, you can think of that as the social graph, the profiles, the posts, the likes, the follows. And that's important because if you actually look at the early era of social networking, and the two examples I'll bring up first is Facebook. Facebook had an app platform, Zynga being a pretty prominent company that had been built on top of that, that within a very short period of time, when Facebook changed their strategy, basically had a severe material impact on Zynga's business in terms of ability to monetize because of some decisions that Facebook made. And then similarly, in the early days of Twitter, Twitter didn't even have a mobile app. All of the mobile apps were third party. And at a certain point, around 2014, 2015, Twitter made a strategic decision that at the time probably made sense for their company, but had a big impact on all of these independent developers who had spent years building kind of applications in an ecosystem. So with a protocol based social network, like Forecaster, that's impossible, because developer always has the ability to directly access the underlying data and APIs, again, similar to the web or email. Yeah, there's a lot of good points I want to dissect there. I mean, first an anecdote, which is like, for creators and developers, and like basically users, which was like the three thing most important parts, I think, to like any like social app or network, and you want kind of all three sides to like developer wise, like, personally, I think it's a net good for your ecosystem for people to be able to build on it, use your API's and basically like built on top of that. I think like the web two companies probably disagree, the user side, obviously, your user is your lifeline. And then as a creator, like any social platform, you also need creators, right? Because what is there otherwise to consume? So creator aside from like being able to port their content, it's also being able to port their following. I don't know if you know the story, like I got into crypto, like super early days by starting this like little niche YouTube channel. I don't really talk about it because it's embarrassing. But like, now that I'm relaunching this podcast, and I'm kind of like going back to my account, I'm like, Oh, man, I actually built up like a very, very small, but like dedicated following kind of wish I could just like, put that over and now have to like start from zero again. So that's just like a minute, like problem on the creator side. But as you were talking about the difference between you know, web one with two like apps, any social apps built in the crypto space, I think one big difference is basically in order to like use any crypto apps or interact with crypto, you actually need to like own crypto first. And so like it for me to get online, I just need like a router and modem. But for crypto app, depending on what network they're built on, I also need to use the native token. And so I think like, sure, as the end user, I don't have to think about how email works. I don't need to know what protocol it's built on. But as a user, like to use a crypto app, I need to kind of know what the underlying network is so that I can like pay gas fees and like do these things like, at least in the current state. And so I guess going back to my original question, which is like, are there things that I guess like a token network can enable for Forecaster that like building in a web architecture can't? Yeah, so I think two things. So the first is, we take the kind of requirement that you need to have crypto in order to use an app pretty seriously in that we think that that is a bad user experience, particularly for something as kind of consumer oriented as social. It's one thing if you're using something like Coinbase, where you're investing in a cryptocurrency, it's kind of hard to not have to, you know, do all this onboarding and then ultimately connect your bank account so you can go buy because that's what you're trying to do there. Whereas with a social app, you're actually just trying to kind of like what content is here, who should I follow? And so that's a much lighter weight requirement in terms of at least interest. And so I think that the app experience should mimic that. And so one thing that we've done early days is use something called meta transactions. So when you onboard to Forecaster, we actually do the on-chain transaction for you. Yet the architecture is actually still done in a user controlled way, which I think is actually kind of cool. We use something called OpenGSN. But you can kind of think of it as the user creates a new wallet to sign up for Forecaster, but they didn't have to have any Ethereum to actually do that initial transaction, which puts the kind of core primitive, which is the only thing that we actually put on chain, which is the username, kind of your identity, and mapping that to an Ethereum address, which is a public key, which allows everything else in the network to be off-chain, really fast, easy to use, because under the hood, everything magically is being signed with that crypto wallet. So that's kind of been an important product experience that we've really tried to hone and improve over time. But to step back to say, what does a crypto powered network enable? I think a core primitive that we're starting to see some interesting initial applications pop up around is the fact that everyone on Forecaster, by definition, has to have a public and private key. And I think if you kind of go back to the history of some of these computing platforms, the early web, effectively, people made an assumption that everyone has an email address, right? To be on the web, you probably had an AOL account in the US at some point, and that came with an email address. And so one of the reasons email addresses became the authentication mechanism for virtually every website and app was because they were kind of universal. And as we shifted to mobile, you actually saw a shift from making an assumption that a user had an email address to, well, if you're on a mobile phone, you have a phone number by definition. And so actually, a lot of the kind of best in class mobile apps shifted over to an assumption that you just have a phone number. Upload your contact book to find friends, use that as authentication, right? It's like, it'll send you a text message so you can log in. And so I think where we're headed with Forecaster is we're actually adding a new primitive and a strong assumption you can make about anyone who is already onboarded to Forecaster. And we're doing a lot of the work to onboard the users to the protocol. But as a developer, you can actually make the assumption that any user within the Forecaster ecosystem has a public and private key. And with that, it's actually a canvas for a whole bunch of new ideas. An example being zero knowledge proofs is you can actually permissionlessly start to build new apps and experiences that make that assumption that a user has a public and private key that you can kind of start to create new experiences that otherwise would be very difficult to bootstrap. Yeah, it's the sign in Ethereum button that I'm hoping to see kind of like everywhere in a few years. Something that I've noticed about Forecaster also specifically, is I've seen a lot of developer excitement being attracted to build on it. And like, you know, I was looking at your feed this morning and you were like, Oh, I didn't realize like paragraph, which is like a web free newsletter, like integrated with Forecaster, like that's awesome for missionless innovation. And so I think those are like really encouraging early signs. And so as you kind of look at this, what metrics in your head do you think you need Forecaster to get to for you to consider it as hitting critical mass? The way I think about it is you start with what do we ultimately want to accomplish and we want to build an internet scale protocol. So you think of those core protocols that I mentioned at the beginning, DNS, HTTP, SMTP, I want Forecaster one day to be at that level, which is a pretty ambitious, big goal. And in order for us to get there, that by definition means we have a lot of developers building new apps and services on top of Forecaster, the protocol. And if you then kind of step back and say, well, how do you get a whole bunch of developers building on a protocol, at least from a social protocol, which is a little different than DeFi, and I've been in crypto for a while, and so I spent a lot of time trying to kind of think through this. What a social developer cares about is addressable daily active users. And the analogy I always like to give is the reason the app store on the iPhone is interesting for developers is not because of some fundamental technology breakthrough from the app store. If anything, it's actually kind of draconian. Obviously, the app store cut is limiting from a business model standpoint. But the reason people still deal with all of these app store restrictions is the fact that Apple has a billion people around the world, and they tend to be higher income people who have an iPhone and are carrying around with it on their physical person every day. So better than a daily active user, it's like daily active carry around a device that you're checking all the time. And so to kind of bring that back to Farcaster, the thing that's going to attract developers who want to build new apps and services is the total number of people who are using at least one Farcaster app every day. And so from our standpoint, the way to solve for that is build the first app, right? So you are the one that is doing a lot of the work for onboarding, figuring out, okay, where's kind of the friction on that onboarding process, but also what is a compelling feature set to get a sufficient number of people to be checking some app in the Farcaster ecosystem every single day, which now all of a sudden means an app developer who's building Paragraph or Pearl or any of these apps that are starting to get built in the Farcaster ecosystem, they have an addressable market of crypto curious, daily active users that they can make the assumption that they have an Ethereum wallet just based on the architecture. So if you're a web three or crypto builder, and you have a new app or service, even with Farcaster being much, much smaller than a traditional social network, all of a sudden that social graph becomes actually a great place to potentially go launch your product, because you know that the average quality of the user on a variety of metrics is higher. And that, I think, becomes the flywheel if we can continue to grow, again, the total number of daily active users, you attract more developers, those developers build new apps and services, which attract other people who want to try those out. And I think we're starting to see early signs of it. But I think we have a ways to go before it truly hits critical mass. And so to maybe give you a quantitative number, we have roughly 3000 people in our beta today for Farcaster, I would expect that it probably needs to be two orders of magnitude larger. So kind of in the hundreds of thousands of total people signed up on the network before I actually think that you've hit that critical mass where developers now are kind of thinking Farcaster first. And I think we're having some early signs of that today. But we have a ways to go before we truly get there. Yeah, if I'm not wrong, all 3000 users, you onboarded yourself. Yeah. So the first 400 I did a video call with, and actually, what's interesting is most of those people turned, maybe it's me, or maybe it was the wrong set of people to go after in the early days. And I think we've gotten a lot better about kind of figuring out who is actually going to be most interested in Farcaster at least today. And I think one set of features that we built last year that ended up working out pretty well is we natively integrated an NFT feed alongside the kind of Twitter-like experience. So in some ways, it's kind of hearkening back to the old school Facebook newsfeed, where you had posts, but you have all these kind of like, oh, this person changed their profile photo, etc. And in our case, it was taking what you were doing on chain and kind of mixing it with the kind of Farcaster native content, which looks a little bit more like Twitter. And I think we just kind of continued to iterate week over week over the last year. And at some point in the spring, we kind of hit an inflection point, I couldn't tell you exactly what happened other than the conversational liquidity on the app, and I follow everyone on the app, so I generally get a sense for what's going on. It got to a point where you could actually open up the app, and there's probably a new post within call every minute. And actually, we just hit that, that like from an actual threshold in September, we got to a point where on average, there were enough posts that every minute in the month of September, there was a new Farcaster post. And so the kind of feeling like this is actually now a vibrant community where there's actually stuff going on. That is the big driver of what's actually been I think, growing the network now, whereas maybe some of the features we had before were good enough to kind of bootstrap it. But actually, if I if I talked to anyone on Farcaster today, the primary reason they're using the network is they actually find that the people on the network and the conversations on the network are interesting in and of themselves. And so I think that that's an exciting stage for us, because it means we probably can continue to grow the network for some amount of time, where we don't have to necessarily add any one new feature. And it allows us to actually focus really in on keeping the community really high quality. And so you know, trying to avoid spam bots and all this other kind of stuff that I think plagued a lot of other social networks. And then similarly focus on the protocol. We made a decision last year when we launched the beta, we launched v1 of our protocol knowing full well, it wasn't going to scale and it wasn't going to be perfect. And we're in the process now of migrating from the first version of the protocol to the second version of the protocol with a year's worth of learning under our belt. And all the mistakes that we made were hopefully correcting and should reduce the number of kind of like pain points, especially for developer experience at the protocol level, informed by that kind of year's worth of usage. Yeah, I don't think I've heard the term conversation liquidity before. I think it's amazing. I think that's like, I don't know if you coined it, we're gonna make it a thing. So yeah, 3000 ish users, you get a cast every minute. So you're pretty much onboarding like early power users. And I've heard from a lot of people like, hey, forecasters amazing, because like a lot of the noise is gone, like people who are on it really care about what they're talking about. And so like, I mean, this is the obvious question with any social app, when you think about curation, which is very much like, you know, you heavy, which is quality versus quantity. So as you open up the beta, as you start to onboard more people, as it gets more quote, unquote, noisy, how do you think about that balance? So we're figuring it out, I don't claim to have a perfect solution, we plan to stay invite only first kind of in this model where it's DM me on Twitter to get access to the network. And a lot of people are doing the referrals, right? So it's someone telling a friend, they're showing at a conference, like, hey, look at this app. And then people DM me and say, I saw this, you know, a friend showed it to me. I think we need to move that to a community driven model like that, that's much more sustainable, just from the fact that I probably can't manage my DMS on Twitter, beyond much more than where we are today. But the goal is to actually for the first million users to keep it invite only. And we don't want to kind of go vertical in terms of the growth rate, because I actually think that can overwhelm the network. And so we're targeting something along the lines of 5% weekly growth, compounded over multiple years to kind of get there, maybe it ends up being a little higher, but that's still multiple years before we get to a million users. And I think that if we take that deliberate slow growth approach, assuming people continue to find the network useful, as we scale, we are going to run into inevitable issues around quality, the community feels like it's getting bigger and not as intimate as it was before. And I think it can really help force us on our product, right? Like we built this initial client. And if we continue to be active users of the network, how do we actually make the experience feel as intimate as it was when it was maybe smaller. And so I think part of that is just kind of paying attention, responding to user feedback, talking to users on a frequent basis, and then trying to kind of think about what are the smart defaults that we can set in the client, assuming we're going to continue to be one of the larger clients, that reward behavior on the network that we think is correlated with quality and the direction we want to head. And so one example I'll give you, we have the concept of a like on Farcaster, and we have the concept of a retweet, we call it a recast on Farcaster. But the very simple algorithmic feed, so we kind of have a normal reverse chronological feed, and then we have an algorithmic feed, we call it highlights. We have made an explicit decision that the highlights feed should highlight the most active and engaged conversations on the network, not necessarily the thing that has the highest like count, which I think if you strictly let a machine learning algorithm that was optimized towards time spent in engagement go wild, you inevitably are going to have the posts that get the most likes and recasts. But if you actually are kind of making a human level, hey, this is actually what we want to kind of nudge the community towards, it's still going to have its version of gaming and people trying to figure out how to hack the algorithm. But I think if you view the social network algorithm much more like a game developer would, and so to use the kind of term, there's this kind of term in games like Dota or League of Legends, where they nerf overpowered strategies, and then they buff the underpowered ones, assuming you kind of want to continue to add balance. I think that that's a mentality that we are hoping to bring as we grow towards that million users. And I think if we can actually make it to that point and still have a highly engaged and kind of active community, I think roughly around a million, you can actually open up signups and the product probably is more mature in that it can handle all the inevitable things that start to come with an open signup network. And I'm happy to talk about those because obviously as soon as you open it up to anyone on the internet, it gets a little messier. 100% Yeah, for sure. The messy part and I want to touch on the messy part, but to kind of respond to what you're saying, like I think even a million, that's a big number, but it can still be majority self selecting in terms of the people that are on the platform. Obviously being online, super beneficial in some ways building your brand, you know, meeting people that you otherwise would never meet across the world. All of that is the great stuff. But the really, really, really not great stuff is, you know, opens you up for harassment for bullying. And I think in recent years, it's just gotten especially, you know, you hear about certain platforms getting super toxic. And so I guess on an open platform, how would curation and moderation work if they do work? And can it work? Or is it just inherently at odds with the open nature of a decentralized social protocol? Yes, I think the analogy I would point to is email. Everyone in the world basically uses moderation in their email, they just call it spam filtering. And I don't think it tends to be that controversial because it tends to be pretty tuned to a specific type of email, right. But even if you think about Gmail, Gmail's default interface actually has multiple tabs, right. And if you think about kind of like what gets put in that primary tab that's effectively Gmail's algorithm, right. And if you're an ecommerce company, and you've built a relationship with the user, now Gmail is actually disintermediating you in terms of like the primary place of attention. And so I think that the way to think about moderation with something like Barcaster is going to take time to get multiple clients, right. So we only have one client today. But if you believe that we get to a world where we have multiple clients, then clients are going to be the ones that are the first line of moderation, right. And so our client that we're building might have a different moderation policy than another client, in the same way that there is no universal spam filter, it's based on the service provider that you choose. But what's important about that is as an adult, and a kind of a consumer, you have the choice of which client to use. And that, I think is a good market pressure towards allowing the clients to try to optimize for what they think is the best content moderation policy that still serves their set of customers, right. And I think you can also kind of think about that, even if all of the clients decide to kind of restrict access to a certain account, it truly reprehensible or terrible content that they're posting. And then if you actually look to the next layer down the kind of like Farcaster network, there's this concept that we have that are similar to Ethereum nodes called Farcaster hubs, you could have all of the hubs decide to say, hey, we're not going to index this content. You as that user still have one, your kind of username to pub key mapping, which lives on chain. And then two, you have the ability to go run your own hub, which to use another analogy is very similar to the web, right. If you think about it, when you have a website, Google is not guaranteeing that they're going to index it. And in fact, if it was really bad, they're probably not going to index it. But that doesn't mean that your website got taken down off of your web host, whether you're hosting it in your basement or paying another web host. But it does shift the distribution significantly in that you have to have a direct relationship with your audience, you're not going to get kind of free traffic from Google. And they'd have to have directly access your website via URL in a browser. And so I think of it like that, where if you remove the vertically integrated stack that exists in traditional social networking, which is identity, the hosting, the moderation, and the algorithm, which is essentially distribution, if each one of those is actually kind of a little bit more fragmented and a little bit more market based, I think you lower the temperature pretty quickly. Because if you take something like Twitter, fundamentally, Twitter's algorithm is optimizing for engagement and time spent. And I would imagine that posts that are incendiary tend to drive engagement. So outside of some manual review, generally, those posts are going to bubble up because it's getting a lot of engagement and people are spending time looking at it. Whereas if now you have an ecosystem of clients, different clients are going to have different optimizations. And I can tell you the client we intend to build, we're not going to do an ad based model, we're going to do subscription based models. So you can kind of almost thinking more like superhuman for social media, where our goal is actually to provide the highest signal to noise ratio for our subscribers. So that's a fundamentally at odds with time spent. So you could imagine there's like a Zen mode where it's like, don't show me the posts that are going to actually be abusive or all this other kind of stuff. Because we actually aren't trying to get engagement, what we're trying to do is provide you the subscriber with the most utility. Hmm. Yeah, I think that actually speaks to like a very common misconception, which is like, if it's open, it's inherently like chaotic. But I think what you're trying to say is actually the composability of it actually allows for more options, and more tailoring that's like suitable to each person, each user, or whatever. So I think that's an important like misconception actually to dispel. Yeah. And I think one other thing to think about, so I use this analogy, it's not perfect, but newspapers, they have their own editorial policies, what gets put on the front page is essentially an algorithm, it's human powered, right? In theory, they're all reporting on the same factual set of information, the stuff that's happening in the world, but coming at it from a very different lens, right? But because there's actual freedom of choice, and anyone can go start their own newspaper, obviously, you know, you need resources to do that. But because that's actually a competitive market, there isn't one algorithm that, oh, well, if it ends up on, you know, this newspaper, that's how everyone thinks it's there's actually a much bigger marketplace for good and for bad, right? Yeah. So I think a big percentage of our listeners are builders at Web3 companies. So putting out a wish list, what are some of the things that you want to see built using the protocol? I think I mentioned it before, I think zero knowledge proofs are this academic conceptual area, we've seen some major breakthroughs over the last few years, and, and they're kind of a technology looking for maybe a solution. But what I think is neat with Forecaster is now you actually have an engaged user base, and hopefully we continue to grow it that has a public and private key, it's an Ethereum address. And you can actually start to do applications using this kind of theoretical, interesting technology, and it should just be compatible directly with a Forecaster user. And so an example of this would be trustless decentralized polls, where if you think about when you vote on a poll on Twitter, you're actually voting, it's anonymous, but that's only anonymous, because Twitter's UI has shown it as anonymous in their database, they know what you voted for. So if that was ever leaked, maybe people would find that embarrassing. Whereas you can imagine with a zero knowledge trustless, decentralized poll, I can prove that I'm an active Forecaster user, I can prove that I only voted once, and I can prove that the original Forecaster account didn't create multiple, you know, kind of sock puppet accounts to do multiple votes. That's a difficult thing to actually go implement. But theoretically, that should be able to work with zero knowledge. And so you can imagine an application that now allows for one Forecaster account, one vote, which would be interesting. I think another thing that I'm just generally excited for is today, we really only have one client because we've been the one building kind of the protocol and the client. I think early next year, the developer experience at the protocol level is going to be sufficient enough that you're going to start to see people experiment with their own clients. And I think that that's really powerful, because one that gives the ability for anyone on our client today that's unhappy with whatever product decisions we make moderation policy, pick your reason for being upset with us, they now have a viable exit. And I think that's critically important to actually hitting a bar to say, hey, this is a sufficiently decentralized social network, right? Because I can talk to you blue in the face about the philosophy. But if the reality is the only way to access the network in a reasonable way is through one client, if that client decides to kick you off, then effectively, the network is no different than a centralized network. So I think it's really important that we get to that ecosystem of multiple clients. And I can imagine some people will build open source, some people will build closed source, subscription, ad based. I'm just excited that if there's actually starting to be a competing ecosystem of clients, it's going to raise the average quality of client, as well as benefit the network in a way that it hits that sufficient decentralization threshold. Yeah, and I'm excited to follow along. Last question is, where can people follow the work that you're doing? How to stay tuned if Forcaster opens up and sign up for it? Aside from spamming or DMS? They can send me a DM, I get through them every week, I get through all of them. It's DWR on Twitter. And I think just following the Twitter account, if you're not already in Forcaster, or there's a Forcaster Twitter account, if you're not on the network already, it's probably the easiest way to follow the progress. But hopefully we get to a place where we are doing more publishing on Forcaster and less on a centralized social network. But I think from a practical reality, it's where people are already spending time. And if you're spending time on Twitter, you're probably a good candidate to at least check out Forcaster because the experience today at least is very similar. Yeah, yeah. I have to say your response rate is astonishing fast. So ping DM Dan if you want to if you want an invite. Cool. Well, thank you so much for the discussion, Dan. I can't wait to follow along, have you maybe have you on again in a year just to see how it goes. And yeah, and thanks everyone for tuning in. Thanks for having me. Thank you all for tuning in to another episode from season two of Crosschain Examination, hosted by Catherine Wu and presented by Archetype. If you like this episode, please give it a five star rating, like it on YouTube, and subscribe to the show if you haven't already. Also make sure to check out season one, we have 10 episodes from awesome guests talking about all kinds of topics from privacy and crypto to crypto regulation to many, many other topics that I care deeply about. Share this also with a friend with a co worker and maybe even family if you enjoyed it, and give us a follow on Twitter. We are at crosschainpod. DM me, at me with any suggestions, guests you would like to hear and anything else. Thank you so much again, and hope you tune in to our next one.