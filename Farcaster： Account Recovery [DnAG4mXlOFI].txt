So a challenge with decentralized social networks is what happens if the user loses their key pair. Let's say Alice misplaces the public-private key pair that controls 1234, which also controls her ID 3489. Now she can no longer send messages on behalf of her ID. And obviously this is problematic. In centralized social networks, there's usually an email recovery flow you can go through, but in decentralized social networks, we need a similar system to protect Alice without compromising the decentralized ownership of her identity. So the one way we accomplish this is by allowing a secondary recovery identity to be set up by Alice. So when Alice first sets up her account, or at any point after, she can nominate a second address called a recovery address that also is connected to the same identity. So now we'll connect this here, and we'll say that this one, she actually nominates Bob's address, 9889, which is now her recovery address. So a primary address, or this custody address over here, has a special property where it can transfer this identity to a new address. So let's say that Alice, for whatever reason, wants to rotate her key pair. She wants to use a new application. She can simply go and issue a transfer request, which moves this down here to 5678 and nullifies the ID that was previously assigned to 1234. This still has to obey the rules that each address can have exactly one ID, at most one ID at any time, and an ID can also be mapped only to one address. As long as those rules are held, a transfer can be executed at any time on the blockchain. Now, the recovery address, the way the recovery system works, is that we allow the recovery system to request a transfer of the address, and after seven days, it can complete that request to another identity, to another address. So let's say that Alice has lost her key pair 1234. She goes to Bob and says, hey, Bob, I've lost my key pair. Can you transfer this? So what Bob does is Bob, you know, let's say it's January 1st. Bob issues a transfer request, which is recorded onto the blockchain, and this request says that Bob wants to move this ID 3489 to 5678, which Alice also controls. But the ID actually doesn't move over yet. It kind of stays there. Now, after seven days have passed, Bob can come along and complete the transfer with a separate transaction, which is enforced by the blockchain, and at this point, the ID transfers over, and the ID swap and 5678 is now the owner of this identity. The delay period here is super important because it allows us to be protected against the situation where Bob goes hostile. So let's say that Alice actually did have control over her ID and Bob attempted to maliciously transfer her identity away from her. Well, Alice can just at any point in between these two dates, Alice can issue a transfer cancellation, which immediately stops and cancels this request, and it would just delete this entirely. And she can also then go and revoke Bob's identifier and so on, and then make it so that Bob can no longer have any access to her identity. So this is sort of an important property of the system, right? The recovery address has the ability to move the identity after a delay or an escrow period, which prevents it from having total control over the identity. It only has control of the identity in the absence of the primary custodian of the identity or if the custodian doesn't respond. And there's the seven day waiting period that ensures that the custodian has sufficient time to respond to any requests if they're still in control of their identity. And so this is actually a really cool system that can be composed in a bunch of different ways. So we've said here that Alice gives control of this to Bob, but it doesn't have to be Bob. It could actually be her second wallet that she actually keeps in a safe somewhere. It could actually be a third party service that would do something like call her and verify her identity or check her driver's license before giving her back her account. And so you can actually compose this in a bunch of interesting ways to create different recovery systems based on what each user wants. Now, a final note, there is a bunch of research going on in the systems like account abstraction on Ethereum that would actually allow even more composability where people can customize how their own recovery system works. And you don't need this recovery system implemented in a central registry. But for now, while those systems are still being developed, the Farcaster ID registry has its own recovery system, which give people the flexibility of setting up their recovery. And Farcaster clients will be encouraged to help users set up a recovery system by default so they never end up in a situation where their identity is lost forever.