more sovereignty around the identity, but most importantly, the pointer to say, hey, this is where to find me on the internet. And the username, I think, is a pretty good version of that. But email is a great example of this. People say, oh, that's theoretical or whatever. The reality is, if I have an email newsletter and I'm using Substack, I can point, and I was using a custom domain, I can just change the MX record to a new mail server and overnight start mailing from that new service, and my users don't even know. And so that's an important thing, because now it allows exit for whether you're kind of an individual user who doesn't have a lot of audience and you just want to be able to move between clients. But more importantly, if you have a big audience, you can actually use the software provider that is providing you with the best service, not the biggest audience, but then you're locked into whatever their terms of service. So before I move on, I want to say that if I could get at Humpty on Twitter, I would be very happy. So when I went to FariCaster, I made sure that I got at Humpty, because that does mean something to me. It's special to be able to identify as who I am on these platforms in the most efficient way possible. And so being able to do that on FariCaster was a thrill. You said something just now that really struck a chord with me, and that is you're able to move to the platform that's providing the best service. I think one of the things that Web3 enables is that because you're not tied, you know, your identity, your data isn't tied to one platform. You know, these platforms are now having to compete and actually deliver a better product. They're not necessarily having or kind of benefiting from locking in their users and saying, ha ha, you can't go anywhere. It's more the sense we have provided a client, a platform, a protocol with the best user experience. Give this a try, because this is where you're going to find your tribe. This is where you're going to be able to grow your audiences, where you're going to be able to share your content in the best possible way. Tell me a little bit about like that as maybe or if it is as a something that inspires FariCaster as a team, as an organization, in terms of what it's building from the protocol and the client level. So I'm a big fan of permissionless innovation. That's the original thing that got me excited about Bitcoin and Coinbase. At the time, people were building some rudimentary but exciting, what I thought was exciting, apps on top of the Coinbase API. And just contrasting that to FinTech, and FinTech APIs have improved over the last 10 years, right? Like Plot has made that a lot easier and things like that. But at the time, I was looking at that going, oh, wow, you can either deal with payments with all this kind of like legacy core stuff, or you can have this internet native currency, and you can kind of build micropayments, you can build streaming payments, you can build basically, your imagination is the limiting factor. And I think it's worth delineating that a lot of people are always like, well, all those ideas are terrible. Well, that's irrelevant, in my view, in the sense that what you're doing is you're allowing the aggregate creativity of the internet by making something permissionless, and not having any friction to get started effectively. I think that that is an underrated thing, because we've lived for the last 10 years in kind of an increasingly big tech environment. But prior, I think a lot of this interesting experimentation and all the experimentation that still happens on the web today is permissionless. And so it's like, if anyone says that that's not valuable, then, okay, like, I think they're being hypocritical, right? It's like, chat GPT did not have to get permission from Google to launch chat GPT, right? They're able to do it as a website. They didn't even have to go do it as an app, because we still have the open web. And so my point of view is, we already have this big permissionless platform called the web. But there are a bunch of other kind of what I would call what you want to call marketplaces or things that have supply demand, liquidity, that are siloed, that have gotten big as a result of the internet, right? Because the internet gives you distribution. But the innovation has slowed, because it's one company monopolizing that specific pool of liquidity, right? I think a good example of this is Airbnb. Airbnb, yes, you can go to VRBO or some of these other sites. But the reality is, is if you want to kind of rent a house that has some nice aesthetic characteristics, Airbnb is going to have the best liquidity and supply there. But as a result of not having any client competition, because they own that proprietary supply, Airbnb can do all these user frustrating things where it's like, oh, we're going to show you a fee, and then the cleaning fee and the taxes get added in later. Or like, basically, users have to complain, and that's all they can do. Like, yeah, they could vote with their feet. But the reality is, is like, they're going to use the supply even despite the bad experience. With that said, if you could actually now say Airbnb, that marketplace, like that supply was a protocol, okay? Doesn't have to have a blockchain. Just take the approach of that you have a common standard that any one company can actually offer that same supply. And then they're able to provide some level of the trust that Airbnb provides, right? Because the reason Airbnb is successful is that, yeah, they got the supply, but more importantly, there's some baseline level of trust. Like, if you have an accident that happens there as the homeowner, Airbnb is going to cover you and then as the guests they are. And as they hit that scale, they can kind of create that convenience and trust. I think another example, and this is something that I learned in crypto in my first five years in crypto, was at Coinbase. So you can go buy Bitcoin at a bunch of other places. Bitcoin by definition is a commodity and it's completely fungible. And like a Bitcoin bought on Gemini or Binance or Square or Robinhood, it's the same Bitcoin that you would buy at Coinbase. There's nothing special about Coinbase. Coinbase is also more expensive. And so the fact that Coinbase still continues to grow in terms of the total number of users and has a meaningful business and is much bigger than a lot of their competitors who are charging lower fees for the same thing goes to the fact that you are competing on a set of things that people value beyond just the base level price commodity tradeoff. We're not like these like perfect economic actors that only optimize on price. It's like people care about brand, they care about security, they care about UX. And I think Ben Thompson actually has a great blog post on this called What Clayton Christensen Got Wrong. And so for those who don't know, Clayton Christensen wrote this book, The Innovator's Dilemma, and he talks about how in markets you have low end disruption, start kind of in an area that the incumbents don't think is valuable because it's like low margin, it's kind of like not worth their time, they want to spend time on high margin stuff. And then they work their way up the value chain and ultimately disrupt the incumbent because they've eaten the profit margin the whole way up or they've just been able to operate better. And so he made this prediction that Android was going to disrupt the iPhone, right? It's like iPhone, fine, it's luxury good, but like it's going to have low end disruption. And obviously that hasn't happened. And the reason is consumers are not the same as businesses. So in business, you actually have a lot more rational, like it's a lot more dollars and cents most of the time. But with consumers, there's an aesthetic, there's emotion, there's brand. It's like, why are you wearing the clothes that you're wearing? Is it because of the technical characteristics or it's how it makes you feel or kind of how you want to be seen in the world? And so this is a long rant to go back to, if we can get to a place where the kind of big systems that got built up during the Web 2 era can move towards being protocols. Again, I'm going to like be really clear. Brand is not like the answer, it's just like there's a tool that you can use if that's the right tool to use to get things to be protocols. And I actually think that the primary way that this is going to happen is you just have a rational people like Varun and myself, it's kind of irrational to start working on a Twitter competitor when Twitter is at scale. And we just say, hey, well, we want to build something that's a protocol and decentralized. And by the way, we have 99%, 98% market share on Farcaster today, albeit very small user base. It's completely fine if we get down to 10 or 20% market share with our client, assuming we continue to grow the protocol, because then the protocol is successful. And I think that cynical people will quickly show up and say, hey, well, what's to stop you? Go from 8,000 people on a beta today to 8 million. Why don't you just change it so that you're like, I'm sorry, just like Twitter, no more open API. And I would tell you, you should continue to be really skeptical and cynical, despite me saying all these things, until Farcaster actually hits a bar that it is permissionless. And so that's actually what we're working on. And so we're working on this thing called Farcaster hubs. And you can think of a hub is like what an Ethereum node is for the Ethereum network. A Farcaster hub is for the Farcaster network. But when these are ready later this year, not designed for the average user, but more importantly, any developer can go to GitHub, they're going to be able to download a Farcaster hub, spin it up pretty quickly. It's going to sync with all the other hubs on the network, kind of like BitTorrent or Ethereum. And then you have full global access to the state of Farcaster, the data and APIs. And you as a marginal developer, one man shop or one woman shop, you can compete with the big company in the space. And then that is an equal playing field. And so until we get there, that's me all just promising and people should be skeptical. But once that exists, you don't have to trust me. You can just test it out for yourself and say, does this actually work? And so that's my general view of it is Web3, I think, gets way too wrapped up in crypto. I love crypto. I think crypto has a lot of really useful characteristics and properties. But I think that the jargon wars is like it just makes people batty, especially on Twitter. But I think what Web3 means to me is the foundation of what you're building is a protocol. So you're going to compete on service quality. And then the ability to exit with interoperability, it's a little bit of a mouthful, but it's important so that if I am providing you with access to Farcaster right now, assuming we hit that kind of like Web3 protocol bar, in my view, if you don't like how we're providing service, you don't like the algorithm we're doing, you don't like the UI and someone has something better, you're a couple of clicks away from switching over. And then there is no gimmick where we're locking you in and not letting you leave. It's like, nope, that's the ethos of this thing. And that's actually how the norms are set up. And going back to my original point about email, those initial norms can go a really long way. And if you've invested the time and energy into trying to make the protocol really healthy from the beginning, then it gets really difficult for a big, big company to come in and push everyone out and then close things down because the cat's out of the bag at the beginning. So you said something that I think I'd like to get a little clarification on. So you were talking about Farcaster hubs and how these, we could see them as nodes in the Ethereum blockchain that hold a state of the network, right? Yeah, on Ethereum, if there is not consensus with the way that the protocol is moving, they can basically come to a fork in the road, literally, and have two different versions of that protocol. It sounds like to me in the future, as long as there is an agreement that Farcaster is working in the best way possible for its community and for itself, it will continue to operate as Farcaster. However, it sounds like there could also be a chance where if there are disagreements between the Farcaster hubs, similar to these nodes, they could potentially fork. And as a user, you have the option of using one or the other, right? You have that optionality. So in terms of the interoperability on exit, which I think was a term you used, you have that both if there was a fork of the Farcaster protocol, but it sounds like also you could potentially have that same interoperability at exit from the Farcaster clients. If there was another client that would be built on the singular Farcaster protocol. So there's this kind of flexibility too, in terms of how the protocol works and how the client works and the different options that users like myself have to have the best user experience overall. Yeah, so I think that what's important is a fork with Ethereum or fork with Bitcoin. The state of the network is actually pretty critical because if I have a Bitcoin on this chain and I have a Bitcoin in this chain, and if you're trying to get a Bitcoin from me, which chain do I trust? That actually, that double spend potential is the thing that actually drives consensus. And we've actually found is, you know, it was theoretical hard fork before the Bitcoin cash one and then the Ethereum, Ethereum classic one. But basically the other chain never dies. And so there's kind of like a weird split and then, and then the there generally so far has been consensus on one other. I think with Farcaster, it's slightly different in that one, there's no spend, right? It's just a post and any one post, you know, is not the end of the world probably, you know, maybe there are some rare exceptions, but the other thing is you can actually simultaneously be consuming from, from both chains if that was to really happen because you don't have to worry about is this authentic or not? You just care about is the signature correctly mapped to that identity, right? And so you can actually kind of just simplify Farcaster, the hubs, they have a consensus algorithm like a blockchain, but they don't actually have to solve for double spends. So thus you don't have, you know, gas fees or things like that. And so we actually use something called the CRDT. It's technical. But the idea is that what we're betting on, and I do think that this has worked for Bitcoin because you know, they could in theory change the block size or whatever, but miners, you know, generally have aligned with the core developers. And so that despite you know, people wanting this to happen, you can actually drive to some level of social consensus, which actually drives how the blockchain works. Same thing with with Farcaster is ultimately if you're using Farcaster, going back to this idea of what we're optimizing for is you want distribution. And so you're going to be less likely as a, especially a big publisher with a large audience, you're not going to want to use a client that is not maximizing the distribution reach to the network. And so the game theory here that at least we believe this and we'll see how it plays out over the next few years, is your incentive is to kind of always make sure as many people as possible get access to the content. And then you will for your users, you want to get it as fast as possible to them. And so there's actually just a basic economic incentive that you're providing us client in the ecosystem, you're going to kind of want to be following the kind of like the fact that the default implementation. And it's also important is that we've built the initial client, and we're going to continue working on this client. And so the reference client, the initial one that exists is going to be following these practices. So you even if you have someone come in and they grow really fast, and they start trying to hijack the network, there's always going to be hopefully a credible alternative, as long as we're running this main client, you know, 20 years from now, maybe that's not the case. But hopefully by then, if it's worked at that level, you're going to actually have such a big market that you're going to have many different clients. And if anyone client starts to not follow the kind of the norms of that network, people will switch. So thanks for that. I think I'd like to go back to something you said earlier, and that's permissionless innovation. And I personally being someone that's at least on a regular basis opening up my Forecaster app, I do see the number of different developers that are coming in to the platform, and that are sharing the different things that they're building, you know, on Forecaster. Tell me a little bit about this idea of opening up the platform, the protocol to developers to be able to innovate and build, you know, different things, whether that is a Forecaster client or something else. I was going through your Twitter, and I think you do a really amazing job at highlighting some of the different things that are getting built on the Forecaster ecosystem. I've met a couple of amazing people there that are building things like Disco, for instance, right? And even you shared a tweet about like Forecaster Hubs being a contribution or something from a different developer. I think it sounds obvious why you would want to open up a system that way. But just maybe give me a little bit more context to someone who's developing a platform like Forecaster to have this open system where anybody can come in and contribute. So our initial beta launch now, two years ago, or a year and a half ago, we did not put any effort into the developer platform. So we launched the V1 of the Forecaster beta, barely checking the box that you could run Forecaster without using our servers. It would require a lot of technical work. You would have to kind of like deal with a bunch of stuff. There were going to be breaking changes from our end. But it did work from day one, from an architecture standpoint. We've kept it in a private beta, actually. One of the primary reasons is we just haven't hit a bar where you can actually hit that permissionless innovation where you don't have to ask anyone. You can just show up, download a hub, sign up on the blockchain, you know, without asking anyone and then get going. Today, you have to ask me for an invite via DM. API keys are administered until the hubs are ready through us. So there's a little too much centralization for us to actually be in an intellectually honest way, publicly promoting Forecaster as like, get signed up, like it's sovereign, right? Like it is very much a beta. That said, there are plenty of people who are interested in using it. So we appreciate everyone who has thus far. But what happened was for the first nine months, no one built anything on the permissionless APIs. And there was no documentation really or whatever. But then what happened is as we continued to grow the number of people using Forecaster and remember, we built the initial client. So we were kind of able to onboard people and give them an app that they could be using. People started tinkering around with things. So Greg Skriloff built something called Searchcaster. Shaki Sukar built something called Cast RSS, which turns any Forecaster feed into an RSS feed, which you can consume in a feed reader. And we just started to get people playing around with things, which when you have people permissionless, innovating and then sharing on Forecaster, and we try to do a job of.