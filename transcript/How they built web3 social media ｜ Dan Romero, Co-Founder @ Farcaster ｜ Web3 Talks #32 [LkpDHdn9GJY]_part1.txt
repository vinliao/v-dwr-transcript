Hey, this is Web Free Talks. The rule of this podcast is simple. We only talk with people who have hands on web free building experience. So if you are a hacker, entrepreneur or investor, you can get inspired by their stories, lessons and fuck ups. My name is Mac and I'm hosting this pod. If you want to stay in touch, go to Twitter.com slash web free talks, click the link in the pinned tweet and join our Discord community. Let's go. Today's guest is Dan Romero, co-founder of one of my favorite web free projects. And the project is named Forecaster. And if you make a quick look at it, it's you might think, OK, it's a decentralized Twitter, but it's much, much more than that. And I'm sure that in the next few months, it will be one of the most talked about projects in the whole space. So I'm happy to have you, Dan, here today. Thanks for having me. So like before we get to Forecaster, could you tell a little bit about your backstory? Because you've been in crypto for a long time. You were employee number 20 at Coinbase. So could you share a few words about this time? I moved to Silicon Valley in 2013, and then I promptly dismissed Bitcoin as a Ponzi scheme and magic internet money. The backstory there is I went to college with one of the co-founders of Coinbase, Fred Urshom. And when I was moving out to San Francisco, he pitched me on joining as one of the earliest employees at Coinbase. I think they had maybe just hired Olaf, who now runs Polychain Capital. But they had a huge customer support backlog, and they were just looking for people to get their hands dirty and help them with the massive amount of growth that they had happening at the time. And I hadn't read the Bitcoin white paper, and I just completely dismissed it. Like magic internet money, why do I want to work on that? I ended up joining a SaaS company. And finally, being out in San Francisco, what I found was anytime I met a smart person who seemed to have really interesting perspectives on technology, they also had a perspective on Bitcoin and generally found it pretty intellectually interesting. And I think as a result of that, I finally got around to reading the white paper. And after, you know, it's pretty simple. I think it's eight or 10 pages. I think the language is typically pretty clear relative to, if you think about most cryptocurrency white papers today, they tend to be very math-oriented and technical. Whereas I think the Bitcoin white paper is incredibly cogent and much more approachable than most people think. I think it's worth everyone's time to just read it, even if you don't want to work in it, just to understand what kicked this whole industry and trend off. So I read that, and then it becomes this mind virus where I can't stop thinking about Bitcoin. And the thing that I was most excited about is Bitcoin as a kind of new computing primitive. So when I read it as 2013, 2014, mobile was really hitting its stride. And I think the thing that drew me to Silicon Valley originally was I wanted to build consumer products for people in a way that you could walk down the street in New York and Boston and London, and you could potentially see someone using a product that you worked on. That was exciting to me. And I think Silicon Valley traditionally has been the best place to do that. And what I saw in Bitcoin was, oh, this is how the next set of apps after mobile are going to be built. And so made the switch over to Coinbase, ended up staying at Coinbase for almost five years. The thing I was wrong on, one, people aren't building those consumer apps on Bitcoin. And there are a variety of reasons. I think Bitcoin has opted for a particular strategy around decentralization, which I actually think makes sense for Bitcoin, but makes it pretty difficult to build consumer applications on top of them. And then I think that the second thing, and my time at Coinbase is, it's still really early for cryptocurrency. And so I think we're in this kind of deployment phase where for the first, my first five years in crypto, the on-ramp and just getting people from going to fiat to crypto was the challenging thing. And I think we're probably at the order of magnitude now of like people who've bought their first cryptocurrency or have a cryptocurrency wallet, where it makes sense to start working on some of those consumer applications. And now that it's not just a Bitcoin-only world, I think that there are other blockchains and other technologies that you can actually use to go do that. And so that kind of five years later is why I kind of left Coinbase and now working on what I'm working on. You started Farcaster in 2020, as far as I remember, with Varun Srinivasan, who also worked at Coinbase. So what was Farcaster two years ago and what is it now? Like how this idea evolved? Well I reconnected with Varun in 2020. We had worked together at Coinbase and we went through a whole bunch of ideas. Varun had been a little bit more interested in DeFi stuff. And I think for me, I had an interest in kind of some of, again, these consumer applications, a whole variety of them, some of them non-crypto. And as we kind of went through the various ideas, just kind of brainstorming, like how would you approach this? I think one question that we found particularly interesting and spent a couple of weeks on was the question of why did RSS lose to Twitter? And then the kind of flip side of that is how could you make RSS competitive with Twitter in 2022? And for those on the podcast who don't know what RSS is, it's real simple syndication. It's a protocol, it's permissionless. It is actually how you're probably getting this podcast today to your podcast player. It's kind of this in the background, pushing information out. But it's really kind of stagnated since around 2010. And in that era, I think a lot of what we have now with centralized social media kind of outcompeted the ecosystem of independent clients and stuff built on top of RSS for a variety of reasons. So one discovery I think is vastly superior for kind of some of these centralized social networks, I think particularly Twitter. I think the usability and kind of not having to kind of configure multiple different services to all work together. Twitter, in some ways, is just kind of this nice vertically integrated experience where you sign up with an email or phone number, you can start following people, you have an app all from the same company. And I think that plus Google also had a product called Google Reader, which was one of the largest in the space. And they actually just killed it overnight because it wasn't making them enough money or worth their time. And so in exploring that idea, we did this kind of big, long brainstorm and thought through a bunch of different things from first principles. We said, why don't we start working on a prototype? And we were calling it RSS+, the idea being, you know, make something that's a little bit better than the existing thing that can be potentially competitive with Twitter. And two years later, with a bunch of iteration, hiring some people, having users in a beta, we now have something called Forecaster, which spiritually is related, but has evolved quite a bit since. You know, I'm obviously a very avid Forecaster user, but for people who have never tried it, like, what is it like? How does this user experience look like? Like I opened the app and what do I see? I think if I was just to pitch someone in an elevator, it would be Forecaster is like Twitter, but if you're really into crypto, that's the super simple pitch in terms of like what you would actually be using every day if I sent you the app. Fine. If you're interested in crypto, maybe that's more interesting to you. But I think when you peel it back a little bit more of how it works, which I think it's worth pointing out, most people don't care how something works. They just care about how to use it or how they experience it. I think that's completely reasonable and fine. But in terms of what we're actually trying to do, Forecaster is what we call a sufficiently decentralized social network. We can get into that in a bit, but it's a social network that isn't controlled by any one company or individual, and it offers two guarantees to users and developers. So for users, you have a direct relationship with your audience. And the analogy I always use, if you build an audience on Twitter or YouTube versus building an audience on an email newsletter, if Twitter or YouTube decide for whatever reason you can't be on their platform anymore, you lose their audience. There's no chance to get to export your followers and bring it to something else. There is no recourse. You can't sue them for it. That's the terms of service, right? Centralized platform. Contrast that to email, where if you build an email newsletter and you're using MailChimp or Substack and you decide to switch platforms or one of them doesn't want to work with you, you can export your entire mailing list, move it over, and it works seamlessly. Like your newsletter subscribers don't even know that you're using a new newsletter service unless they're technical or kind of looking at the details. And so what Farcaster is promising is if you build a following, so you have 10,000 or 100,000 followers on Farcaster, no individual client or platform can take that audience away from you. So you're free to kind of move between different pieces of software built on top of on the social network. The developer guarantee is somewhat related, and it's that developers always have access to the underlying data and APIs of the social network. And the example I'd give you here again is Twitter related. Twitter's early days, all of the mobile clients were third party. So it was independent developers playing around. There's a lot of actual interesting innovation. Pull the refresh came out of an early Twitter client. And at some point, Twitter decided to change their corporate strategy. They have every right to do that. And overnight, all of these clients kind of lost the ability to build meaningful independent businesses on top of Twitter. So it kind of went from this like very API, open API friendly company to, hey, we're going to focus on our first party client because it's potentially offering a better user experience for people and we can monetize better on ads. I don't think you can fault them for that decision, but it is pretty jarring for people who had spent hours and years building these clients to have that change overnight. With Farcaster, if you go and build anything, whether it's a kind of client application, a new service, new type of social network, the access to the API and data, that's guaranteed. But more importantly, any users you get, they belong to you. So there's no kind of third party company that can come in and say, actually, you know what, we're getting rid of sign in with Farcaster. Now these users don't belong to you anymore. Sign in with Facebook, that kind of happened as well with Zynga. And so those two premises are actually the core foundation of what we hope that as Farcaster scales, it can really earn the right of being able to call it a protocol. And what I think of as a protocol is you have a variety of independent clients, applications, businesses that are thriving, and it's not dominated by any one company or service. And I think that is better for consumers because it forces the different applications and clients to compete on user experience. And it's much harder to do rent extraction, if not impossible. And I'll give you one last analogy, because this is what I grew up with crypto, crypto exchanges. Crypto exchanges are built on top of these permissionless cryptocurrency blockchains, Bitcoin, Ethereum, and the core service that they're offering, the conversion of fiat to cryptocurrency. It requires work and now it's regulated, so you have to have enough money and resources to do it. But if you just look at the history of crypto exchanges, there have been a bunch that have come and gone. And you know, Coinbase has been there through most of it. But Coinbase has had new competitors happen even after Coinbase has been at scale. Contrast that to most of the other stuff in Web2, where once you kind of get these proprietary network effects, you know, the classic example here is the Airbnb fees, right? Everyone complains about how like they list, you know, like $500 a night, but it's actually $1,000 a night if you take everything in it. Well, there's no way to do a competing client on Airbnb, because Airbnb has worked hard to build that proprietary liquidity for their marketplace. But it's built in a Web2 way where it's not a protocol. Whereas you can imagine at some point in the future, if someone is clever enough to figure it out, if rental stock for housing was more of a protocol, you'd have a bunch of competing clients trying to offer the best user experience, right? And so that is the vision of where we want to take Farcaster. But like I said, where it is today is it feels very much like Twitter. You open it up and it's a bunch of people talking about cryptocurrency. And so I'm happy to talk about how I think about going from where we are today to where we want to head to. But that's basically Farcaster. Yeah, I think Dan that you're very humble when it comes to this short definition that it's just like a Twitter for people in crypto, because yeah, I've checked many web-free social products before. There's been this, you know, like, like, very old history, like Steemit, and there was like Bitcloud, all these crazy innovations happening there. Now there's Lance. But Farcaster is really special because you can really feel that you focus on user experience. And I think your onboarding process is very, very interesting. So if you could tell like, in a few words, how does it look like? So I created an account. And what happens next? Because I think it's really, really worth discussing. Our onboarding is interesting in that it violates some conventions from Web 2.0. So kind of the make your sign up as easy as possible. That's how you you get to make a product great. And it violates some conventions from Web 3.0, which I can talk about in a second. So from a Web 2.0 standpoint, it was interesting when we first launched the beta last year, we had an insanely simple process. I think it was two steps. It was you'd sign up, you'd pick a username. And then we say backup this kind of like passphrase, and then you're good. Like you're ready to go. No email required, nothing. And I think that the initial feedback from people at least stated preference was, wow, this is this is an amazing onboarding. But the reveal preferences, a lot of people churned. So what we actually ended up doing over time is we added a bunch of steps. And part of this is because the app is currently invite only. And you can relatively get an invite pretty easily. You know, you DM me on Twitter or someone refers you and most of the time I'm sending you an invite if you're not spam bot, basically, that's what happens. But the interesting thing is when you have an invite only app, there's high intent for people to want to sign up. So you can actually add more friction to the onboarding process, which again, kind of goes against this Web 2 conventional wisdom. But what you get out of that is if you can get people to finish a longer onboarding, you end up having the initial first experience be way higher, both for the user signing up, but more importantly, other people in the network. And I think one one thing it's worth thinking about from first principles is so Facebook is kind of considered the like they were so good at their onboarding and, you know, shaving off every single click tap like it really worked for a network, especially a network that you had to find other people, you know, and they had all these like magic tricks that they could do because of the contact importers and all that other kind of stuff. But for something like Twitter, it's a public network, right? And you're actually trying to find people that you might find interesting. And so given that we're focused on Web 3 and crypto natives today, we've taken this approach where you fill out all this information. So your profile looks pretty good. We give you this big button when you start. It's hey, here, here are 50 people that, you know, we do a little bit algorithmically, but it's also some curation right now that we think represent the best of what Farcaster is. And part of it is I use the network a lot. So I have a general sense of what those accounts are and it changes. But that experience is great for the initial user because they sign up and they kind of already feel like, wow, I'm ready to go. But then the other thing that they get is they get a bunch of people to follow them, right? Because if you sign up and you just have a username, no profile photo, no bio, someone might not want to sign up for that. Whereas if you've taken the time to kind of fill everything out and then we just have a most recent signup list because we're not growing that fast, you tactically you end up getting, you know, 20, 30 people to follow you within the first hour, which I think on most networks, you don't really have many new people following you unless you really have a big audience. And if people who do follow you, they tend to be like almost like automated accounts or something. And it's like, you don't trust that. And so I think it actually has this really nice experience that creates the social like connective tissue pretty fast for people, which helps with the potential. The web three component, though, that I think is different is we actually don't allow you to bring your own wallet, which I think people have told me that that's crazy. You don't understand crypto despite having been in crypto since 2014, that we basically have made a decision that when you sign up for Forecaster, we don't want to require you to have a wallet. We want you to generate a new wallet that the application that you're using, whether it's on desktop or mobile, now has full access to the private key. And if you if you've ever used a kind of web three app and you want to actually do multiple actions from your kind of core Ethereum wallet, you have this really clunky flow where you keep getting kicked out to third party application. Right. So imagine using Twitter and you like a post and then you get kicked out to MetaMask and you have to like actually click. And it's really technical because what you're actually signing is this like weird JSON blob, which doesn't make any sense to a normal user. Whereas by taking the pain of saying, no, we don't even allow you to import a wallet. You have to get a new wallet, back this up, which people lose that. And so we've had to think through some improvements on the UX for that. Once you're in, everything can just magically happen for you. And then it's really focused on our opinion on how the user experience should work. So we've kind of broken out of the mental prison of saying, oh, well, everyone should just use this existing wallet. And part of it is we can do that because we don't have to do stuff on chain. Right. So if you're playing around with money, you can't do it in a kind of like new wallet because you can't just like add money to that person's account. It's like playing poker with fake money. It's like the consumer psychology completely changes. But based on the forecaster architecture, where we only really do one thing on chain and what we care about is actually that public and private key in the background. We're actually able to do this, deal with the pain up front, you know, front load as much of that pain. And then once you're in, it's like all you can eat. And I think that was an informed experience also by Coinbase, where Coinbase started out with really simple onboarding. And what you ended up having is a lot of these customers thought they had a Coinbase account. And then when they wanted to go buy Bitcoin or ETH, they would get hit with this KYC, know your customer, like, you know, show your passport and all this, which is this really user hostile action. And people would get mad at us. They'd be like, wait a second, I wanted to buy Bitcoin and now I have to go through this flow. Whereas we shifted at some point, I think it was like 2017, 2018, where we just did everything up front. And then once you were in, you never got hit for another request for the most part. And that's a vastly better user experience. And so to kind of summarize, I think onboarding, a lot of people kind of cargo cult some of the web to like make it as simple as possible. You want to go as viral as possible, contact importer, all that kind of stuff. Whereas considering the shape of the network and actually what your specific go to market should actually be much more informative for how you want to do onboarding. Yeah, I would add also that there's like a bot that recasts, which is basically like retweeting the posts by new users for like a week or something like that. So you get some exposure, even though like you might have 10 followers, you might get exposure to hundreds of followers. So if you post good content, you can get many followers quickly. Which is cool because the newcaster bot is actually built by someone in the community. So it was a permissionless idea. And when the network was smaller, basically, I would go to the recent tab most days, I would click through to see if people had done a post, then I would reply, just my standard one is GM and welcome. And it's like kind of like someone showing up to your house and you're greeting them, right? And when Katsuya launched newcaster bot, I was like, oh, wow, we should have built this ourselves. But what's so neat and going back to the whole point of farcaster is it's at a place where the developer, if they have an interesting idea, it's not post on farcaster and convince the devs to do something. It's you just doing it.