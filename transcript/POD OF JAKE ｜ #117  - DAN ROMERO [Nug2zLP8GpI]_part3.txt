for potential reasons. And overnight, a whole bunch of businesses were kind of, had the rug pulled out from under them. Another example of this is Facebook. Facebook built a big app developer platform right before they made the huge pivot to mobile. And Zynga built a really meaningful business on top of Facebook. Facebook changed the rules. That has serious impact on Zynga. And I think the guarantee with Farcaster is because you're actually moving those core APIs and the data to a protocol, it ultimately becomes a user's decision whether or not they want to use an app. And I think that that's a really strong and powerful guarantee that you can offer a developer for when they're thinking about, okay, should I actually invest time to go build a really high quality app and experience? And if they know that someone else could at some point just turn the APIs off, then they're, I think, on the margin, less likely to do that. Whereas in the case of a kind of protocol-based app development, you can make that investment knowing that no one is going to be able to kick you off the protocol. And ultimately, it's on you to develop the relationship with users. Yeah, I mean, it's certainly more attractive to go and either build a client or even just as a user, interact with a platform with certainty that what you do there will persist in the long haul, independent of one organization or one person making a decision. Trump being like an obvious example on Twitter, invested a ton of time there and arguably, probably contributed materially to helping him win the presidency and ultimately got kicked from that and other platforms and tried to build his own and whatnot. That's a little bit of a separate story, but that was one of the biggest moments for me that I realized why it's important that social media and social networks are decentralized because that's a lot of power that Jack had or Twitter as an organization had. And it's just very debatable. There's still obviously people who would have preferred to continue to see Trump's tweets and maybe they don't go sign up for his new platform or whatever. I think there's a lot of hype around decentralization these days and especially in the crypto world and people forget what the actual point is. And I think when it comes to social media, a large part of the point is decentralization isn't an end in and of itself, but rather a means to censorship resistance, just as it is in the example of Bitcoin. For example, when it comes to money, you're sort of becoming independent from the Fed, printing tons of money and doing what they want in monetary policy and things like that. In this case, it's controlling, making sure that no one's in control of what you're allowed to post or what platforms you're allowed to be on and things like this and having the option to exit and participate in whatever platforms you want basically and have your audience have that direct relationship that you mentioned. So sufficient decentralization, I think, is a very interesting way to sort of attack that issue because what it's clearly not is maximal decentralization. You're with Forkaster, you're not attempting to have every individual post on the blockchain, which can create scaling issues and things like this. And I think if I can draw an analogy with Coinbase and you can maybe tell me how on or off this might be, but Coinbase in the early days made a very contrarian decision in a space that was crypto or really just Bitcoin at the time that was very much pro-decentralization and anti-regulation to create a centralized exchange, opposing decentralization in some sense and appreciating decentralization, but being a centralized exchange was just a naturally sort of opposite move and then embracing regulators and trying to educate regulators in, again, a space that was generally anti-regulation. Forkaster, I think, is taking a space that, again, is largely decentralized and saying, well, we don't need to be maximally decentralized. We'll sort of decentralize the registry and you can create your profile or your handle in a way that is decentralized, but we'll go and actually, you know, we'll start by hosting the messages ourselves, similar to like Coinbase hosting your funds. But the difference is on like Twitter, you know, you can take these anytime and exit, just like on Coinbase, you could take your funds and go to self-custody. On Forkaster, I imagine sort of in the future, you can take your, if not already, you can take your, you know, go from being hosted on Forkaster to hosting yourself. Is that a reasonable analogy? And how did you ultimately come to that decision of like, what do we actually need to decentralize here and what is okay to keep centralized? A couple of things. The first is an excellent book by Tim Wu called The Master Switch, which talks about the history of communications technologies. And the core point of the book is that most new communications technologies start out decentralized, hobbyists, tinkerers, small businesses, and naturally centralized. And the core reason is the centralized bigger companies, and you know, whether it's phone or television or in case, you know, social media recently, is they offer superior user experience and there's economies of scale. And so you get all these benefits that start to compound. And I think that that is an important framework to realize that basically an indication that consumer preference is for superior user experience. And I think that if you start with the belief that actually people want decentralization, that is you're not rooted in the correct average consumer psychology. Like that consumers care about user experience and Clayton Christensen's jobs to be done framework, I think is pretty good in that. And it's like, if something has a superior user experience and is satisfying whatever the consumer's job to be done, they're probably gonna use that. And so I think that that is important to think about. And then the second one is something that I lived at Coinbase is you could see that even though Bitcoin and cryptocurrency broadly is a decentralizing force, the revealed preference of consumers is to, yes, I wanna get involved, I wanna buy some Bitcoin or ETH, but I don't really wanna figure everything else out. So I'm willing to sign up with Coinbase which offers a pretty good user experience for someone onboarding into crypto. And that's about it. They never withdraw their Bitcoin or ETH. They don't go use a user controlled wallet. All of that stuff is, I still think very much in the realm of power users, early adopters, people who genuinely find experimenting with stuff fun. And so by taking kind of those two things, I think where you should start, if you're trying to increase decentralization for a given system, is start with the current paradigm which I'm assuming is gonna be centralized. And then if you think of the spectrum of centralization to decentralization, work your way from the centralized point down that line to the point where you hit what we would call sufficient centralization. And in my mind, it's you keep all of the benefits of centralization while adding an important characteristic of decentralization, which I would describe as exit with interoperability. And the way to think about that is, let's say you have a company, AcmeCo.com, and you sign up for a G Suite Google provided email service for your domain. And you really decide you don't wanna work with Google anymore and you wanna switch over to a Microsoft hosted email service. That operation is a, call it 30 minute process. And once you've switched the kind of pointer for the domain from Google to Microsoft, you have no interruption in your business. People who had your email address before can continue to send you email. And that forces Google and Microsoft, as well as all the other email providers to actually have to be responsive to customer needs and compete. And so that's this kind of idea that you can exit an existing provider and then interoperate with all of everything you were doing before. Another good example of this is in cell phone carriers. Prior to, and I think this was a law and I'm generally skeptical of most regulation, but in this case, this was good regulation in that the ability to switch phone number between cell providers actually makes those, that market a bit more competitive because now I can actually take a phone number which already people have in their contact book and I can switch it over from AT&T to Verizon or Verizon to Google Fi. And on the margin, I think that that makes the market more competitive versus having you locked in. And I think that the, in the case of cell phone providers is because the spectrum is actually limited. And so you can't just go create a new cell phone provider. But I think that this concept of exit interoperability is the thing that you want to in any system and try to get to actually a minimum level of decentralization that I think is sufficient. Is effectively what you're doing with exit with interoperability is you've created competition. In the case of Farcaster, and this works today, by the way, there's really only one client, it's the client that we've built because we've been spending the last two years working on this. So it's pretty polished. But Farcaster as a protocol will only be healthy when there is a sufficiently feature parity or competitive client that if anyone gets pissed at the way Dan and Varun are running our client, they can just simply switch to the other client. And that actually will force us as a company to be more responsive to customer user needs. And I think that is something that we think a lot about from the protocol standpoint. So I wouldn't be surprised that in the next year, like we put some substantial amount of work, whether it's through open sourcing a bunch of stuff, we're actually potentially even funding another team to build a competitive client. Because until that hits that point, we don't really have a protocol. We have, yes, like the foundations of a protocol and the ability to kind of say, hey, the APIs and data are open. But if for whatever reason, we have to kick a user off of our client for some terms of service violation, where are they practically gonna go? And if they can't go anywhere else, then you actually haven't hit that level of a protocol. Compare that to the web, right? So if not that this happens, but if Google Chrome really didn't wanna work with you, you could use Safari, you could use Firefox, you could use, pick your favorite browser. And so that I think is really, really important to hit if you're trying to build a protocol. And this is beyond just Forecaster, but anyone building a protocol needs to hit that level before they can really start calling it a protocol. So just to take this example a couple of steps further, and actually, first of all, do you have a couple more minutes? Yeah, yeah, I can go till, you know, whatever time. All right, cool. Great, well, I mean, this is really interesting. I've been really enjoying Forecaster, like I said, so it's great to be able to ask a few questions and I'm sure people listening are interested as well. So just to walk a bit further with that example, we don't need to use Trump per se, you know, people are unnecessarily divided on that, but, you know, user XYZ is on Forecaster today. And for whatever reason, you know, does something totally just against all of your values and principles and you decide, you know, he's not welcome on the Forecaster client anymore. You know, this is like two or three years from now, something like that. But he's okay on the protocol because everyone's okay on the protocol, basically. So how does that guy or girl, you know, continue to reach his audience, assuming that there's some competitive clients out there, are these people, you know, if he has a following on Forecaster, the client, are those people now forced to go somewhere else to view his content or how does that actually look like logistically? Each client is going to have to make that decision for themselves, but given that we're building the initial client, I think we will have a lot of influence in terms of what the default pattern for this will be. But I like to use the web as a good analogy for this. So when you get kicked off, like our Forecaster client, Merkle Manufacturers is our company name, we need to name that client something not Forecaster at some point so that it's very clear that there's a separate protocol versus client, right? Gmail and email are very clear that one is different than the other. But if you get kicked off our client and you are continuing to use the protocol, that to me should just be no different than the way a web browser handles the difference between being on the web and being on the client. And that's the difference between being indexed by Google and a URL, right? So let's say you have some reprehensible content, I don't even know. Google decides not to index your webpage. Everyone understands that Google has every right to decide what pages it indexes, right? That's like their prerogative, they're competing search engines. Yes, Google is the biggest, but no one is confused that if Google doesn't have your webpage indexed that you as the website operator go direct to your audience and say, hey, we'll go to my.com, like that's how you get to that webpage. And I think that that similarly should happen with Forecaster clients where you can imagine that the distribution you get from a recast or whatever algorithm a client has, that might go to zero because that's essentially proprietary to that client, that's not at a protocol level. But you can imagine that if you're following someone who's been kicked off that client, instead of showing it in feed, you could say, hey, there was a post from this user, we don't index that content in the same way that Google doesn't index a webpage, but it might let you know that if you tap a button, it'll kick you out to the browser and it'll open up that piece of content, right? And so that becomes a pretty reasonable trade-off in that you haven't censored an individual, but you are not giving them a premium user experience and the virality of like a social feed. And I think that the counter to the client there in terms of a market force is if you get too aggressive in doing this kind of like, oh, you're not allowed to be on the client, you're not allowed to be on the client, you're gonna have some subset of users who are saying, hey, I'm an adult, I wanna be able to look at what I wanna look at. And I'm gonna go use a different client, whether it's a competing company or an open source client. And that's the way the web works, right? So we're not at a place yet where Google takes Chrome and it says, oh, this webpage isn't allowed to be viewed in Chrome. The only time they do that is if you don't have your security certificate properly set up. So maybe it changes web browsers, but I think web browsers are a much healthier ecosystem. And the reason I don't think people complain about web browsers not censoring web pages is because distribution and hosting are separated, right? And I think that the challenge with centralized social media is if I put a tweet up, that tweet is fundamentally linked to an identity that's owned by Twitter, to a hosted set of media and files, text that Twitter is hosting, as well as Twitter's virality of its feed and its content moderation policy. So in a protocol-based system, you can actually separate different parts of the stack there and hosting can be in one place, distribution is in another, content moderation is in another, and ultimately the identity doesn't belong to anyone and it actually lives in this kind of low-level core smart contract. And for us, that's actually a reasonable use of a blockchain because you can actually write software that can run forever, that doesn't need to be paid for on an AWS bill, right? Once you've deployed a smart contract, you can effectively have the users, by virtue of them registering the username, pay for the ongoing use of that contract. And so that's actually, to me, a really powerful example of where a blockchain is superior to a kind of centralized experience because you've taken that core primitive out of any one company or individual's control and you've kind of put it in this neutral, very simple protocol that has no opinion about what content gets posted. It's just a mapping of a username to a private key or a public key. Yeah, I know that definitely helps sort of paint the picture for me. And of course, it's always difficult, if not impossible to sort of predict how these things are gonna play out. But I think your vision for all of it is obviously, founded in a lot of knowledge about history of all of these various protocols and platforms and deep understanding from a decade and a half of experience on Twitter and consuming RSS and generally information on the internet. So it's gonna be very interesting. And I know a big part of your guys pitch as well is, or maybe not pitch, but just the way you're thinking about things is like, it's not totally up to you to invent this future. You're just sort of building the protocol and the initial platform that can get sort of critical mass of people involved and then open it up to the devs, decentralized developers basically, to go and build whatever they want on it and sort of invent the future, collaboratively and in a decentralized manner. And I'm just, decentralized maybe overused term a little bit but just in a way that it's not all the people from one team who are building this ecosystem. It's a bunch of different people with a bunch of different ideas and whoever creates the best products ultimately should win. So I think it's really interesting, but you guys, as you mentioned, felt it's very important to start with building the first platform and building the first client. And right now, protocol is called Farcaster. The platform is also called Farcaster. And I've been on for a couple of months, like I mentioned at the top of the show and have just found it to be a very refreshing place to go read stuff on the internet or whatever and communicate with people comparably to Twitter. I was much later on Twitter than you were, but you've sort of seen the evolution over a decade and a half or the devolution more recently, you could argue. But I think Farcaster is somehow, there's no bots, there's no spam. The people have been sort of hand curated by you to a few thousand or however many there are today. Can you talk about how you've, first of all, why is it important to curate so carefully that initial community? And I'm sort of surprised by how high quality it is, given that my understanding is like, it's basically just DM you.