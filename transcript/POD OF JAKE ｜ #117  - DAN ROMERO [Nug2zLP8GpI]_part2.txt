and Chris led the round in Merkle Manufacturing, my company for Forcaster. And that's a relationship that if you think in a long-term way, rather than kind of like the short-term optimization of, okay, my current title, or what's my current job, I think it shifts it to being a much more, okay, this is actually my entry into the big game of startups or big game of tech. And now I'm known as someone who's competent and willing to be a good team player. I think people underrate that. And there's actually a lot of animosity around that in some ways. And I think the right strategies, you should just be thinking in decade-long time horizons relative to your career and thinking, okay, if I do what's right by the company and what benefits the equity value, which you obviously should benefit from, that seems like the optimal strategy from my point of view. Yeah, I think that sounds great just to sort of summarize. I think work extremely hard, put the team first and take a long-term view. And all of those things, I think, any of them individually might be not pretty reasonable to do, but the combination of the three, I think is pretty difficult. And just naturally, people are selfish, not in like a bad way, but people just sort of wanna improve their situations. And short-term, everyone sort of incentivized to think short-term. It's difficult to think long-term and working hard is working hard. It's hard. So combining all of those things is difficult, but it certainly sounds like that's sort of the strategy that you took and it seemed to certainly pay off. Thus far, I think the first point that you mentioned, I thought it was interesting and resonated in particular with me about people generally underestimating how much you can get out in exchange for work put in at a startup basically versus Google or I think for, you might agree in management consulting at Bain where you started your career. For me, I started in banking and that was actually a reason I sort of cited with a lot of people was that, as for leaving was that I felt like I could do a seven out of 10 job or a nine out of 10 job and it really didn't matter. The deal as like an analyst or whatever, the deal was gonna happen at a given price and my ability to impact that was pretty low and I didn't feel like the extra effort was really producing anything and that's not like a situation I wanna be in cause it just incentivizes like low effort basically and it's not a habit I wanted to create. And so I think it's very nice to be in a situation where you do feel that the incremental effort is worthwhile even if it's not immediately obvious, you can at least sort of have faith that it is and sort of another parallel between our stories I think is that you left that first job at Bain without knowing what was next exactly and I did the same thing from banking and now years later when you realized it was time to move on from Coinbase, I think you did the same thing. You didn't know that you were gonna go and start Farcaster. You left and sort of took a leap. Can you talk a little bit about like both of those times? I don't know if you sort of connect them in your head but I think there is something about leaving a situation whether it's school or dropping out of school or quitting a job without a next one lined up that gives you the confidence in retrospect to go and do it again. Can you talk about like either one or both of those instances having the conviction to leave without knowing what's next and I'm sure people were talking to you like, what are you doing, man? Like, why are you quitting? You don't even know what you're doing. Yeah, they were a little different in that I was leaving a very structured, prestigious job in consulting with a track towards going to something like a Harvard Business School and moving to Silicon Valley to live in a, you know, a three bedroom apartment with roommates I didn't really know. I was living in a closet. I think a lot of people were pretty surprised by that and I think that the thing I was optimizing for is I wanted to be in startups and I think part of that was I wanted to be taking risk and I'm not sure exactly what had contributed to that framework. I think, you know, reading things from Paul Graham or Peter Thiel or Mark Andreessen probably, but I think at the simplest level, you know, evaluating something like, okay, I could have gone and worked in private equity from consulting and the expected value of a career in private equity probably, you know, X millions of dollars. Whereas with startups, especially if you just kind of view them as, you know, shots on goal or whatever term you wanna use, you could go through several startups in two or three year chunks and if you end up getting one right over a 10 or 15 year period, you can have a pretty material outcome and it doesn't even need to be a coinbase sized outcome, right? And that was really contributing to the second time I left. In the case of leaving Coinbase, I had a sense that, you know, I think that valuation of the company was about 8 billion at the time. So from an economic outcome, it was going to be fantastic, really, really good. And I think I was thinking in the lines of, okay, I don't really have much more to prove at Coinbase. You know, we've been there for five years and it got started to get into a situation where the ability for me to move up in the org by virtue of us hiring more senior people was pretty limited, right? I could have spent another three or four more years and maybe got promoted. But I think in terms of thinking about the opportunity cost of my time and working on things that are challenging, I felt like, okay, maybe this is actually the right time to go and actually try to start a company, which I hadn't done before. And so I took some time off leaving Coinbase and intentionally, I remember telling my wife this, I left on May 1st in 2019. And I told her that I want to be completely off, not think about a single company I want to start until one year later. And I got, I mean, we did a bunch of travel, but I got sufficiently bored. And I think COVID obviously contributed a little bit to that in the second half of that year. But I think that was the right recipe for me to A, follow a lot of intellectual interests down rabbit holes that had frankly nothing to do with technology. I read a lot of esoteric history, which is just like an area of interest of mine. And it felt like my brain got a chance to completely detox from just whatever kind of experience I'd had for the previous five years. And when I started to approach, okay, like how do I want to think about what I want to work on next? I was starting from really a clean slate and I did a bunch of time in terms of evaluating everything else that was going on in tech. And I naturally found myself drawn back to crypto because I felt like it was really the only frontier. Everything else felt like it was like a big company. So like AI is a good example and stable diffusion right now feels the most exciting thing that has happened in AI from my perspective, because it's actually not by like a super well-funded startup and feels more like a movement. Whereas if you kind of looked at a lot of the stuff that was happening in AI was Google or OpenAI or Facebook. And so kind of, I hadn't worked in any of those companies. I didn't have networks of people who worked in those companies. And so the ability for me to kind of go and get smart in that area just seemed impractical. Whereas crypto, crypto is the closest thing to what it felt like watching Silicon Valley from afar, at least in 2008, 2009, 2010, through the lens of something like TechCrunch, where you kind of had these fringe apps that looked silly, the Instagrams of the world that, oh, you're gonna take a photo of your breakfast that compound over 10 years, they get to be really big. And I think what's exciting about crypto, at least my headspace when I was reconsidering, like, should I do another stint in crypto with what I'm starting is, I think we're finally getting to the point where the infrastructure is actually there, right? So one of the mistakes I made in choosing Coinbase in 2014 is I thought that the infrastructure was basically there and it was time to build apps. And it turns out, no, we probably needed another five years at least to get to a place where you can start building the foundational apps in the ecosystem that aren't just strictly money, right? And so I think that was another input, but I don't think I would have been able to figure that out had I not given myself a year of just kind of decompression and some space, frankly, to then come back with a fresh set of eyes and say, oh, I'm actually really excited about working on this idea and there's a crypto element to it and kind of tying everything together in a way that if I was, again, at Coinbase and trying to leave to start a company, I actually don't think I would have been thinking as big. And that's another thing I think that space can provide you is the ability to kind of, I don't know, maybe think bigger. You know, I don't think of myself as anywhere close to an Elon in terms of just like drive, frankly, like I think he's willing to sacrifice a lot more than I am, but in terms of looking at how he approached SpaceX, and this is just, you know, through his biography and looking at kind of this multi-decade long journey, and he knew that that was the case upfront and being willing to work on that as well as something like Tesla, I think is inspirational in that if you do have a little bit of economic security, and in my case, the Coinbase outcome, again, I was thinking that it was gonna be smaller than it was and it ended up being bigger, great, but it didn't change the idea that I felt like I could actually take a longer term point of view on what I wanted to work on versus if Coinbase hadn't worked out, I probably would have ended up working on, I don't know, something that was maybe a higher likelihood of a couple hundred million dollar exit if I was trying to like kind of optimize for like a very specific concrete business problem rather than what I am working on, which is let's build a protocol for building social networks and how do you bootstrap a social network when you don't actually have a fundamentally new social primitive? Yeah, I'm a huge advocate, having done it a couple of times myself, for just giving yourself some time and space to remove yourself from whatever it is that you're doing, whether it's, you know, banking or consulting or working at Coinbase or whatever it might be, and I think it's certainly not the typical path most people like to sort of have the next lily pad lined up before they jump off the current one, but there's something that's maybe a little bit harder to describe, but I think you did a good job of describing to, you know, taking that time and I feel like you do have to sort of set a minimum, you know, you said, you know, a year I don't wanna start anything or join any company or start any company or basically commit myself to anything besides traveling and reading and just sort of relaxing and decompressing a little bit. And it's sort of hard to do for people who are, you know, wanna wake up and get to work on things, but there's a lot of value to it, I think. So, you know, you mentioned obviously, Forecaster was the thing that took you out of that time and was the area where you wanted to commit the next 10 to 15 plus years of your life, which I think sort of how you have to approach any hugely ambitious startup. You know, I mean, you look at Brian with Coinbase or Elon, you mentioned, these things don't just become successful overnight, especially if you're the founder, you sort of have to see it all through if you want it to have any chance of success. What was it about, you know, social media, social networking that in particular drew your attention and can you sort of describe Forecaster briefly for those who haven't yet, you know, gone on the app or seen anything about it? Consuming information is the original hook for me on the internet. I mentioned that before. And I've met a user of RSS and RSS feed readers for, I don't know, as long as I can remember. And Twitter came out, you know, 2006, 2007. I had signed up in college. I built an early Twitter API app and I've been a power user on Twitter for 15 plus years. It was kind of a joke at Coinbase that if something happened on Twitter, I would know about it. And so it was just natural areas of interest for me. I like to think of myself as someone who deeply understands the Twitter product, despite never having worked there or frankly at any other social media company, just the user of the products, not an employee. And I think that that space has always been interesting to me and has been rattling around my brain in terms of how would you actually make Twitter a protocol? And that ultimately was the question that when I reconnected with Varun, who my co-founder, I worked with at Coinbase, he and I both kind of thought that the question of how do you make RSS competitive with Twitter was an intellectually interesting one. And we evaluated a bunch of other ideas that were not related to this, but we ended up coming back to this idea and started to build a prototype to kind of say, okay, well, you know, RSS is this kind of boring, old protocol, doesn't have much state. I don't, for those on the line, it's just kind of this idea that anyone can kind of publish an RSS feed, from their blog or website, and they can change it any way they want. And there's kind of no way to authenticate, okay, well, this was like this before, or if I like a blog post, how do you even represent that? Where something like Twitter, all that's solved, because it's all just Twitter database. And I think we kind of went through, from a first principle standpoint, what are the things that kind of led to RSS's demise, right? Because there was a period where RSS and Twitter, when Twitter was much smaller, were roughly comparable. And there were actually a lot of RSS power users. Google had a product called Google Reader, which was free. And then over the first five years of Twitter's kind of existence, basically killed RSS. It was a superior product, especially on mobile. And Google ended up killing Google Reader, which kind of nuked the RSS space for a while. The interesting thing is that RSS is actually how all podcasts are distributed. So person listening to this podcast right now, whatever client you use, whether that's Spotify or Apple Podcasts, in the background, RSS is the way that the podcast audio file gets distributed to all the different services that ultimately you listen to. So it's actually still used, and probably if you just look at the growth of podcasts, it's probably used more than it ever has been. But there is no company, there is no core team, frankly. It was a one-person effort. And so it kind of hasn't really, it's stagnated. And so it's in some ways like email in that it's really not progressed in terms of the technology. And so I think where we approached Farcaster, and ultimately the RSS Plus was the name of what we called, what turned into Farcaster, is we are going to build a company that actually builds the initial client on top of the protocol. And our belief is that if you wanna build a protocol, something as big as email, which is SMTP, or the web, which is HTTP, you actually need to build that first great user experience. And I think two analogs here, HTML, HTTP, Tim Berners-Lee, that was this academic protocol that was invented. But the thing that actually made the web start to take off exponentially was the launch of Netscape, which Mark Andreessen was one of the co-founders. And it was taking an academic project, Mosaic, the browser, and turning it into a commercial product, Netscape, which moved at a much faster rate of innovation and really pulled the web forward in terms of a timeline. And so a good example of this is Netscape wanted to enable the ability for people to have e-commerce experiences. So they invented SSL, which is the way you do kind of secure shopping online. And when you have a commercial imperative, you can actually still build these open standards and open protocols, but because you're actually trying to make a superior user experience for your users' customers, I think that is the optimal way to actually build out protocols in terms of you dog food your own protocol, but then you're improving your client, your app as fast as possible. And then the other example I would use is the iPhone, which the original iPhone was only first-party apps. So Apple built every single initial app on the original iPhone, including a YouTube app and a Google Maps app. So they got the data from Google, but Apple was the one that built the app. And the thinking there was you get an installed base, and I think in the first year, they sold somewhere between five and 10 million iPhones. And then a year later, you can launch the app store because you've done the hard work of getting that initial set of five to 10 million people to actually be a daily active user of the phone. The phone is literally carried around on your physical person. So it's an amazing developer platform when they open it up a year later, because now it's, hey, we've built this operating system, device that we can handle all these different devices and sizes and all this other kind of stuff. And you as a developer can just ship once, and it can go out to all these other potential users. And so I think that those two things have inspired us in terms of how we've approached building what we're building. And I guess I should define what Farcaster is. I think you mentioned at the beginning, but Farcaster is a sufficiently decentralized social network, and it has two properties that are different than centralized social networks. The first is as a user, you have a direct relationship with your audience. And the way to think about that is if you make a living by publishing tweets or YouTube videos, or pick your favorite type of media, if for whatever reason, an app in Farcaster doesn't want to allow you to use it as a platform, you as the user have the right to actually switch to a different app, but maintain access to your audience. And if you think about something like YouTube or Twitter, if you've built up an audience on either of those social networks, and either of those social networks chooses to not have you be able to use it anymore, there's no way to export those followers, right? And so one of the reasons people always want to try to get an email address from subscribers is that it's a fallback to be able to contact them. The second thing that Farcaster enables is because it's a protocol, all of the data and APIs are open, which enables a developer to say, if you want to build an application on top of the Farcaster protocol, you have a direct relationship with not only the underlying core data and APIs, but any user that chooses to use your app, that's a direct relationship between you as a developer and the user. Cons that too, Twitter, which Twitter in the early days, actually a lot of Twitter's early usage came through third-party Twitter clients. And there was a while where Twitter didn't even have a native mobile app. All of the early Twitter mobile apps were kind of built by independent developers. And at a certain point, Twitter said, hey, we are actually gonna force most users to go use the core Twitter app, which can display ads better for us and all of these other...