Good afternoon, everyone. Thank you all for sticking around. I know it's late in the day and you're getting tired. Hopefully you've got some caffeine. I've got with me Dan Romero, who we've had the good fortune of investing in his new business called Farcaster a few months ago. I talked a little earlier today about Farcaster in my presentation, separating front ends and back ends and social media. Dan is super ambitious and super thoughtful in the process he's going to take to change the world and make all this stuff a reality. So let's jump in, Dan. Let's start with just like, can you share your background? How'd you get into this? Sure. So early employee and executive at Coinbase. I was there for five years. I've been told I'm a crypto boomer since I've been working in the space since 2014. I was originally responsible for all the fiat on ramps. So most of the fiat on ramps in the US I was the first customer of. And then the kind of second half of my time there, I ran the consumer business. So Coinbase is retail division. So you left Coinbase a couple years ago or something, and maybe a year ago, and you've been thinking a lot about what to do next. You ultimately chose to build Farcaster, decentralized social media identity. Why? Yeah, so I still was super interested in crypto once I left Coinbase, but took a full survey of everything happening in Silicon Valley. And crypto still kind of was top of my list in terms of interest. I think that the primary reason is it feels like where the frontier is from permissionless innovation standpoint. I think actually up until recently, AI really has only been in the kind of like, you know, big Google or Facebook world of big centralized companies, big budgets. And if you kind of found that marginal college age developer who was hacking on something, they were doing it in crypto. And that was the thing that brought me to Silicon Valley originally. And as I kind of approached, okay, what to build in crypto, the thing that's always kind of been kicking around in the back of my mind was we've had a lot of financial applications, which makes sense. Money is kind of the first application of cryptocurrencies. But we haven't had a ton of social or kind of information oriented projects. And the thing that originally got me interested in technology to begin with was I was a early user of RSS, power user of Twitter. I was one of the first developers on the Twitter API back in the day. And I've just always been enamored with this idea that the internet, if you have a good idea, internet connection, you can build whatever you want without any permission. And so in kind of taking those two interests together led ultimately to asking a question kind of like, how could you prove RSS, which I think, you know, we talked about before, and ultimately started working on Farcaster. Okay, so what is Farcaster? Yeah, so Farcaster is a sufficiently decentralized social network. It's also a protocol. And it guarantees two things. So users have a direct relationship with their audience. So if you kind of think about Twitter, you build a following on Twitter or YouTube, and they are the kind of intermediary between you and any of your followers or subscribers. So at their whim, you can disappear and you lose that audience. Compare that to something like email, where if you have an email list with something like Substack or MailChimp, one of those providers kicks you off, you can move to another provider and still communicate with your audience. So Farcaster, that's a strong guarantee for anyone using the social network. The other guarantee on the developer side is that a developer is always going to have access to the underlying data and APIs in a way that if you, again, compare it to a centralized social media, in the kind of early 2010s, Twitter had a very permissive open API ecosystem. Actually, all of their mobile clients were third party API clients. And at a certain point, they just changed the terms of service and overnight kind of killed a whole bunch of independent businesses. Facebook also took this approach in the early days, with the most prominent example being Zynga built a meaningful business on top of Facebook. And then within a six month period, Facebook changed the rules, decided they wanted to focus more on monetization, less on apps, and Zynga's business got kneecapped. So with Farcaster, there is no ability for a corporate entity to change the rules of the API. So you as a developer can build a business where you have surety into, hopefully, perpetuity that if you're building on Farcaster, you can have that direct relationship with the protocol itself, not some other company. You all say there's a Farcaster back end, or maybe back end, and there's a front end. Are those things together, or are they separated? Like, super high level overview. Yeah, so we've taken an approach which I think is somewhat different than a lot of the maybe competing Web 3 social protocols, in that we've built both the initial client, so the user interface that the people in our beta are using, and then the actual underlying protocol and data. And by separating that, I think we've achieved two things. One, it puts a level playing field that if anyone else wants to actually go build a competing client, they can. And then the other approach with building the client, which I think is the different part, is that we are actually dogfooding our own protocol. So we're the first people from a developer standpoint to run into the problems and the limitations of the protocol. So it kind of gives us a pretty big incentive to make sure that we're upgrading the protocol. And then whatever we're doing to upgrade benefits the entire ecosystem. So you said you're building the first client for Farcaster. Are there other clients yet? Yeah, so we have a few. So we've been working on it about two years. For the first year, there was no developer interest whatsoever. So we kind of continued to make week over week progress with our own client, trying to figure out people who would use the beta. And then I'd say in the last four to six months, we've had a steady stream, and it's growing at a pretty good rate of developers starting to hack around. And I think that the primary reason was at the beginning, there's just not enough data. It's not interesting, you know, 10 people using the app a day. Whereas we're kind of coming in closer to 1,000 people using the app a day. And with that scale, it's actually generating a sufficient amount of data. You think about the posts, the likes, the profiles, the follows, that a developer can now actually just permissionlessly access all of the data, similar to a cryptocurrency blockchain, and build whatever they want. And so actually one of the first applications that has been built, and it's sort of a client, it's slightly different than how we're presenting it. Our client looks very similar to Twitter. But the kind of like first meaningful client has been a search engine, right? We didn't have native search built into our client. People were annoyed by that. And rather than complaining to us, someone just went and built it. And so it's called Searchcaster. Everyone kind of names everything Caster in the ecosystem. But it's actually meaningful traffic. And one of the things that we're actually considering, because again, we're building both the protocol and the client, and have to have a slightly different mental approach compared to a Web 2 company, is we don't look at Searchcaster and the growth there and say, oh, we need to bring this in-house, and we need to have our own search engine. What we're trying to figure out is how can we actually channel the kind of user distribution, the people who are using our client, into that search engine in a way that, if you think about a browser, when you use your iPhone and you go into Safari, the default search engine is Google. And you can actually switch that to Yahoo or DuckDuckGo in settings. Most people don't, primarily because they want to use Google. But Google also is willing to pay Apple $20 billion a year. Most people don't realize that. Apple's in the search business. They just get paid $20 billion a year by Google, and they don't have to run any infrastructure, just for being the default. And so I think that that's like a pretty powerful idea to say, if you focus on the client, which is much more akin to a browser, you can actually, hopefully, create an ecosystem of independent businesses that can actually leverage the distribution that you have while also building to the health of the protocol. There's certain things that you explicitly do not want to do in-house that you want the community to do. And then to what extent do you say that explicitly and publicly? And just think about kind of the in-house versus external development roadmap. Yeah, it's something that we're trying to figure out. For the first year, it didn't matter. No one was building on the protocol. And I think now there's a term in the developer world. It's called Sherlocking. And it refers to what Apple does is every year at WWDC when they announce their new iOS, there's a set of apps that just get kind of folded in. So the weather app, the flashlight app, like all of the features that in modern iOS just come with the phone used to be third-party apps. And so that's actually something we're really cognizant of. I don't know if I have the best answer for you in the sense that I think when we see developer interest outside of the app, we're actually trying to frame it as, OK, how can we actually enable this developer to actually grow their app, their business with users in a way that benefits them while at the same time deepening engagement in forecast for the protocol overall? And so a good example of this is we have a couple of services that have popped up that are bookmarking. Our version of tweets are called casts. And sometimes someone posts something that's insightful, and someone wants to bookmark it to be able to refer to it later. And so rather than building the bookmarking feature internally, we're trying to figure out, can we actually expose maybe an API from our client that you can choose your preferred bookmarking service and make that one click within the app? Maybe you're familiar with Chrome extensions, so something like that but on mobile, but make it really easy for the consumer to use. But now you're simultaneously using our client, but you're also benefiting a third-party developer. It's almost like a plug-in kind of a thing, like built into. Exactly. And you have to be really careful with that because Apple does not want app stores within app stores. It's actually one of the biggest things. If you look at most of the mobile wallets, I was at Coinbase, Apple reviews every single screen, and any time they think that the word DAP to them is absolutely unacceptable because that's an app within an app, you have to get kind of creative in how you do this. But I think that the frame of plug-ins and extensions might actually kind of pass that sniff test because you're not emphasizing an app within an app, but more you're extending the functionality of an existing app. Right. So one thing that I talked about in my presentation earlier today about credible users or backends was I highlighted Twitter specifically and I said, look, there's all these different use cases for Twitter. You've got music Twitter, crypto Twitter, fin Twit, whatever. They all do different things. There's some overlap in those communities, but they're also fairly functionally distinct as well. We talked in our due diligence with you about how do you unbundle Twitter, what use cases do you go after first? So how do you think about that? Where's Farcaster today on those fronts? Yeah, it's a question I get from most people who, once they start to use Farcaster and they're kind of curious, they'll ping me and they'll say, well, how are you going to get normies to use this? And I think our approach is... Who's using it today before we get to the normies? Yeah, well, so that's what I was going to say is I actually go back to them and say, I don't care about normal users. Normal users will come once you win the... So I think of social status is the way these public social networks work. The number one group of people that I want to win are basically crypto oriented folks who are using Twitter today and using Twitter in an intellectual capacity. So they're actually kind of trying to spread mimetic, like they have a thought idea of like, okay, here's how to value a cryptocurrency or here's how someone should develop some type of new application that plays well with a very sub segment of Twitter. But actually, if you go back to the early days of Twitter, that's actually the origin of Twitter. And so I think that for us, the market to win is any developer who is interested in crypto, who also kind of wants to be in that kind of public arena from an intellectual standpoint. And if you just really build a product for those people, you know, on the order of 100,000 or a million people using that product, which call it in the next one or two years, you could reasonably get there, you start to actually draw in more normal people, right? So first, it'll be kind of tech adjacent investor types who are like, okay, I want to know what's going on in the frontier. Some of you might follow someone like Balaji Srinivasan, who's kind of talking to a very specific audience over here, but bleeds over into, I think, an investor class of folks. And so if you can actually get the kind of folks who are upstream of that discussion using a platform, and they find it higher quality and for a variety of reasons, then you're not really going to start to bring in what I would call more normal users. And it's actually a very similar model. If you think about how Facebook scaled, started Harvard, go to Ivy League, go to.edu, then eventually go to the rest of the world. And if you actually kind of think about it, the moment Facebook opened up from.edu, it was actually the beginning of the end for Facebook, but they had concentrated such a high amount of quality, and quality is a proxy here of just like educated American students, that the half-life of that growth got them to 2 billion users, right? Because the moment it opened up to everybody else, college students were like, this is no longer cool, you know, Snapchat comes along, Instagram, other things. But those growth curves can actually last for a really long time if you really, really focus on a concentration of high status individuals at the beginning. So you focus on that, but then the normies come and then they leave Farkaster then? No, so this is actually, you know, and I have to kind of fight with the early users, because when I say that, they're like, well, why do I want to use this if normies show up and then I don't want to use it anymore? And the difference between something like Farkaster with Twitter or Facebook is you can build your own client or fork the experience. And so the example I always give is you can provably show that you were in the first 10,000 users of Farkaster and someone could go build a client that only allows the original 10,000 people to show up in the network so you can preserve the glory days of the network when it was small, but it's completely interoperable with everybody else in the network. And I inevitably think, and this goes back to the idea of the separate clients, is people aren't just one dimensional, right? So we're already starting to see now that we have a concentration of users, the conversation probably was 90 to 95% Web3 and crypto a year ago, whereas now I would say it's 50%. And people are talking about the NFL, that was on Sunday, or whatever news event that's happening. And so I inevitably think as you add more people to the network, people will actually start to use multiple different apps that all port into the same identity and actually represents much more of what you are as a human, right? It's like you might have a work self, you have a home self, you have the sports fan self, whatever hobby you're into, and then I actually think those affinity groups actually start to become separate social networks. And I think there's a good analog here that Twitter's never been able to breach from two different social networks. The first is Reddit, so subreddits are infinitely more interesting on Reddit than the main feed on Reddit. The main feed on Reddit doesn't get nearly as much interest as the people as they go into the topical areas of Reddit. And then Facebook groups, right? So Facebook is a self, is kind of this dying, decaying product, but Facebook groups is actually pretty thriving. And so you kind of realize that as these social networks get larger, you actually need to allow people to kind of split into their various different tribes. And I think that the beauty with Farcaster is you don't have to beg the core team to build a product that caters to that, you just can go build your own client. Right, so the idea is because the identity is public, and basically you can create filters for any arbitrary client based on number of tweets, type of engagement, when they joined, whatever. Yeah, I mean it's like, you can get really complex with this stuff, because I have a long-term belief that most credentials or anything that's interesting will end up on chain, right? So the Midas list from Forbes is going to be less interesting than the equivalent that is a ranking of provable, you know, ZK knowledge proof of returns on chain, that you can actually now build an experience to say, I want the top thousand VCs in the country to be able to access this app, and when your returns aren't good enough, you get kicked out of the app, and that's all just happening with the blockchain. How do you think about the core user behaviors that people exhibit on these networks today, and do you expect those behaviors to change in any way in a centralized versus decentralized setting? Yeah, so today we don't have any financial incentives in the network, and so the behaviors is actually very similar to a Web 2 social network, it's just a kind of group of curious early adopter folks who are finding like-minded people on the internet and kind of talking. The behaviors we have are much more akin to Twitter, where it's just kind of this public performance, right? So if you kind of think about Facebook, there's a reasonable expectation of privacy, you're focused on who you know. LinkedIn is kind of this quasi who you know, maybe you met someone at a conference, but I think Twitter generally is, you're actually broadcasting to an undefined number of people, and the expectation is anytime you put something out on something like Twitter, anyone could find it. So I think that there's a little bit of that performative. I do think as the network continues to grow, going back to this idea that there are going to be many different clients, I think you're going to have changing user behavior in that inevitably as the network gets larger, the realm of speech for people of what's acceptable gets tighter. I think this happens with every social network, where in the early days people are a little bit more loose and casual, and then as it gets larger, you have a larger audience, you're kind of pretty careful of what you say. But I think that the ability to have many different types of clients actually hopefully keeps some of that really, I think, meaningful user behavior, where people are a lot more earnest and willing to talk. And I think that the other thing that we're hoping, because this is all built in a kind of open source backend way, and it's crypto, is the idea of zero knowledge proofs, which you probably have heard a little bit about today, it's a pretty cutting edge area of research, but it actually starts to enable some really interesting use cases, and the one I always bring up for folks that know American history is a founding component of our Constitution is the Federalist Papers, which were three, James Madison, John Jay, and Alexander Hamilton, they wrote under a pseudonym in a New York newspaper with the pseudonym Publius. And so I actually think you are going to start to see ways of basically creating these group pseudonym accounts that you can actually prove with credentials to say, okay, the three people behind this account all have a, I don't know, net worth of X or education credential of Y, and people are actually, who understand the math, are going to say, yeah, that's valid, the zero knowledge proof there works out, but that actually enables a new type of speech, and to me, with any new social network that works, you actually have a new unit of speech or a new kind of vector of how you can express yourself that actually goes viral. So, you know, example of Facebook is you're connecting with friends you know, and then you have the news feed, which they develop, Twitter is this kind of broadcast to an undefined number of people in a feed, Instagram, obviously, is a photo in a feed, and then Snapchat is the disappearing, TikTok is kind of the algorithmic, and so what I'm hoping is because you actually have the open back end, we, unlike most other social networks, don't actually have to at the beginning nail some new social primitive, what we're actually trying to say is we're going to start with something that's well known, this kind of intellectual space for Twitter, and build the set of kind of open tools that other people can actually go and build on top of. Now, that's not useful unless you have users, so I think that that's like generally our priority is if we can't invent the new social primitive, if I could, I would, the next best thing is get as many people actively using our client, which effectively increases the total addressable number of people in the protocol that makes it attractive for another developer to come in and say I have this crazy idea, and I know there are 100,000 active people on Farcaster, maybe if I go build my social network there versus trying to bootstrap from the start, it becomes an attractive platform for people to build on. You just kind of alluded to the fact that there's no financialization today in Farcaster. If you introduce financialization into things, you get weird incentives, obviously civil attacks, those kinds of things. There's been lots of examples of people in the early social experiments with crypto, 2016 with Steam, with Stepin more recently with Wax Earn and the Play Earn, and we've seen this, that when you introduce these financial primitives, it changes the behaviors. So have you thought at all about do you introduce financial primitives, what kinds of behaviors do you want to encourage or discourage? So how do you think about that in the context of creating content? Yeah, so I've been in crypto for a while, but I think that adding any type of...